// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package protobuf_unittest;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  adjusted = 1;
  any = 2;
  AnyExtensionField = 3;
  AnyMessageExtension = 4;
  AnyMessageStorage = 5;
  AnyUnpackError = 6;
  Api = 7;
  appended = 8;
  appendUIntHex = 9;
  appendUnknown = 10;
  areAllInitialized = 11;
  array = 12;
  arrayLiteral = 13;
  arraySeparator = 14;
  as = 15;
  asciiOpenCurlyBracket = 16;
  asciiZero = 17;
  available = 18;
  b = 19;
  BaseType = 20;
  binary = 21;
  BinaryDecoder = 22;
  BinaryDecodingError = 23;
  BinaryDecodingOptions = 24;
  BinaryEncoder = 25;
  BinaryEncodingError = 26;
  BinaryEncodingSizeVisitor = 27;
  BinaryEncodingVisitor = 28;
  bodySize = 29;
  Bool = 30;
  booleanLiteral = 31;
  BooleanLiteralType = 32;
  boolValue = 33;
  buffer = 34;
  bytes = 35;
  bytesInGroup = 36;
  BytesValue = 37;
  c = 38;
  capitalizeNext = 39;
  cardinality = 40;
  Character = 41;
  characters = 42;
  chars = 43;
  class = 44;
  clearExtensionValue = 45;
  clearSourceContext = 46;
  clearValue = 47;
  codeUnits = 48;
  Collection = 49;
  contentsOf = 50;
  count = 51;
  customCodable = 52;
  CustomDebugStringConvertible = 53;
  d = 54;
  Data = 55;
  dataPointer = 56;
  dataResult = 57;
  dataSize = 58;
  date = 59;
  daySec = 60;
  daysSinceEpoch = 61;
  debugDescription = 62;
  decoded = 63;
  decodedFromJSONNull = 64;
  decodeExtensionField = 65;
  decodeJSON = 66;
  decodeMapField = 67;
  decodeMessage = 68;
  decoder = 69;
  decodeRepeated = 70;
  decodeRepeatedBoolField = 71;
  decodeRepeatedBytesField = 72;
  decodeRepeatedDoubleField = 73;
  decodeRepeatedEnumField = 74;
  decodeRepeatedFixed32Field = 75;
  decodeRepeatedFixed64Field = 76;
  decodeRepeatedFloatField = 77;
  decodeRepeatedGroupField = 78;
  decodeRepeatedInt32Field = 79;
  decodeRepeatedInt64Field = 80;
  decodeRepeatedMessageField = 81;
  decodeRepeatedSFixed32Field = 82;
  decodeRepeatedSFixed64Field = 83;
  decodeRepeatedSInt32Field = 84;
  decodeRepeatedSInt64Field = 85;
  decodeRepeatedStringField = 86;
  decodeRepeatedUInt32Field = 87;
  decodeRepeatedUInt64Field = 88;
  decodeSingular = 89;
  decodeSingularBoolField = 90;
  decodeSingularBytesField = 91;
  decodeSingularDoubleField = 92;
  decodeSingularEnumField = 93;
  decodeSingularFixed32Field = 94;
  decodeSingularFixed64Field = 95;
  decodeSingularFloatField = 96;
  decodeSingularGroupField = 97;
  decodeSingularInt32Field = 98;
  decodeSingularInt64Field = 99;
  decodeSingularMessageField = 100;
  decodeSingularSFixed32Field = 101;
  decodeSingularSFixed64Field = 102;
  decodeSingularSInt32Field = 103;
  decodeSingularSInt64Field = 104;
  decodeSingularStringField = 105;
  decodeSingularUInt32Field = 106;
  decodeSingularUInt64Field = 107;
  decodeTextFormat = 108;
  defaultValue = 109;
  description = 110;
  Dictionary = 111;
  dictionaryLiteral = 112;
  digit = 113;
  digit0 = 114;
  digit1 = 115;
  digitCount = 116;
  digits = 117;
  digitValue = 118;
  discardableResult = 119;
  discardUnknownFields = 120;
  double = 121;
  doubleToUtf8 = 122;
  DoubleValue = 123;
  Duration = 124;
  E = 125;
  Element = 126;
  elements = 127;
  emitExtensionFieldName = 128;
  emitFieldName = 129;
  emitFieldNumber = 130;
  Empty = 131;
  emptyData = 132;
  encoded = 133;
  encodedJSONString = 134;
  encodedSize = 135;
  encodeField = 136;
  encoder = 137;
  end = 138;
  endArray = 139;
  endMessageField = 140;
  endObject = 141;
  endRegularField = 142;
  enum = 143;
  enumvalue = 144;
  Equatable = 145;
  Error = 146;
  ExpressibleByArrayLiteral = 147;
  ExpressibleByDictionaryLiteral = 148;
  ext = 149;
  extendedGraphemeClusterLiteral = 150;
  ExtendedGraphemeClusterLiteralType = 151;
  ExtensibleMessage = 152;
  extension = 153;
  ExtensionField = 154;
  ExtensionFieldValueSet = 155;
  ExtensionMap = 156;
  extensions = 157;
  extras = 158;
  f = 159;
  false = 160;
  field = 161;
  FieldMask = 162;
  fieldName = 163;
  fieldNameCount = 164;
  fieldNum = 165;
  fieldNumber = 166;
  fieldNumberForProto = 167;
  fields = 168;
  fieldSize = 169;
  FieldTag = 170;
  fieldType = 171;
  fieldValue = 172;
  fileName = 173;
  firstItem = 174;
  flatMap = 175;
  float = 176;
  floatLiteral = 177;
  FloatLiteralType = 178;
  floatToUtf8 = 179;
  FloatValue = 180;
  forMessageName = 181;
  forReadingFrom = 182;
  forTypeURL = 183;
  ForwardParser = 184;
  forWritingInto = 185;
  from = 186;
  fromAscii2 = 187;
  fromAscii4 = 188;
  fromHexDigit = 189;
  func = 190;
  G = 191;
  get = 192;
  getExtensionValue = 193;
  Google_Protobuf_Any = 194;
  Google_Protobuf_Api = 195;
  Google_Protobuf_BoolValue = 196;
  Google_Protobuf_BytesValue = 197;
  Google_Protobuf_DoubleValue = 198;
  Google_Protobuf_Duration = 199;
  Google_Protobuf_Empty = 200;
  Google_Protobuf_Enum = 201;
  Google_Protobuf_EnumValue = 202;
  Google_Protobuf_Field = 203;
  Google_Protobuf_FieldMask = 204;
  Google_Protobuf_FloatValue = 205;
  Google_Protobuf_Int32Value = 206;
  Google_Protobuf_Int64Value = 207;
  Google_Protobuf_ListValue = 208;
  Google_Protobuf_Method = 209;
  Google_Protobuf_Mixin = 210;
  Google_Protobuf_NullValue = 211;
  Google_Protobuf_Option = 212;
  Google_Protobuf_SourceContext = 213;
  Google_Protobuf_StringValue = 214;
  Google_Protobuf_Struct = 215;
  Google_Protobuf_Syntax = 216;
  Google_Protobuf_Timestamp = 217;
  Google_Protobuf_Type = 218;
  Google_Protobuf_UInt32Value = 219;
  Google_Protobuf_UInt64Value = 220;
  Google_Protobuf_Value = 221;
  group = 222;
  h = 223;
  handleConflictingOneOf = 224;
  hasExtensionValue = 225;
  hash = 226;
  Hashable = 227;
  hashValue = 228;
  HashVisitor = 229;
  hasSourceContext = 230;
  hasValue = 231;
  hour = 232;
  i = 233;
  index = 234;
  init = 235;
  inout = 236;
  insert = 237;
  Int = 238;
  Int32 = 239;
  Int32Value = 240;
  Int64 = 241;
  Int64Value = 242;
  Int8 = 243;
  integerLiteral = 244;
  IntegerLiteralType = 245;
  intern = 246;
  Internal = 247;
  InternalState = 248;
  isA = 249;
  isEqual = 250;
  isEqualTo = 251;
  isInitialized = 252;
  it = 253;
  Iterator = 254;
  i_2166136261 = 255;
  JSONDecoder = 256;
  JSONDecodingError = 257;
  JSONDecodingOptions = 258;
  jsonEncoder = 259;
  JSONEncodingError = 260;
  JSONEncodingVisitor = 261;
  JSONMapEncodingVisitor = 262;
  jsonName = 263;
  jsonPath = 264;
  jsonPaths = 265;
  JSONScanner = 266;
  jsonString = 267;
  jsonText = 268;
  jsonUTF8Data = 269;
  k = 270;
  Key = 271;
  keyField = 272;
  KeyType = 273;
  kind = 274;
  l = 275;
  length = 276;
  let = 277;
  lhs = 278;
  listOfMessages = 279;
  listValue = 280;
  littleEndian = 281;
  littleEndianBytes = 282;
  M = 283;
  major = 284;
  makeIterator = 285;
  mapHash = 286;
  MapKeyType = 287;
  mapNameResolver = 288;
  mapToMessages = 289;
  MapValueType = 290;
  mapVisitor = 291;
  mdayStart = 292;
  merge = 293;
  message = 294;
  messageDepthLimit = 295;
  MessageExtension = 296;
  MessageImplementationBase = 297;
  messageType = 298;
  Method = 299;
  methods = 300;
  minor = 301;
  Mixin = 302;
  mixins = 303;
  month = 304;
  mutating = 305;
  n = 306;
  name = 307;
  NameDescription = 308;
  NameMap = 309;
  nameResolver = 310;
  names = 311;
  nanos = 312;
  nativeBytes = 313;
  nativeEndianBytes = 314;
  newL = 315;
  newValue = 316;
  nextFieldNumber = 317;
  nil = 318;
  nilLiteral = 319;
  nullValue = 320;
  number = 321;
  numberValue = 322;
  of = 323;
  oneofIndex = 324;
  oneofs = 325;
  OneOf_Kind = 326;
  Option = 327;
  OptionalEnumExtensionField = 328;
  OptionalExtensionField = 329;
  OptionalGroupExtensionField = 330;
  OptionalMessageExtensionField = 331;
  options = 332;
  other = 333;
  out = 334;
  output = 335;
  p = 336;
  packed = 337;
  PackedEnumExtensionField = 338;
  PackedExtensionField = 339;
  packedSize = 340;
  padding = 341;
  parent = 342;
  partial = 343;
  path = 344;
  paths = 345;
  pointer = 346;
  pos = 347;
  prefix = 348;
  preTraverse = 349;
  proto2 = 350;
  proto3DefaultValue = 351;
  ProtobufAPIVersionCheck = 352;
  ProtobufAPIVersion_2 = 353;
  ProtobufBool = 354;
  ProtobufBytes = 355;
  ProtobufDouble = 356;
  ProtobufEnumMap = 357;
  protobufExtension = 358;
  ProtobufFixed32 = 359;
  ProtobufFixed64 = 360;
  ProtobufFloat = 361;
  ProtobufInt32 = 362;
  ProtobufInt64 = 363;
  ProtobufMap = 364;
  ProtobufMessageMap = 365;
  ProtobufSFixed32 = 366;
  ProtobufSFixed64 = 367;
  ProtobufSInt32 = 368;
  ProtobufSInt64 = 369;
  ProtobufString = 370;
  ProtobufUInt32 = 371;
  ProtobufUInt64 = 372;
  protobuf_extensionFieldValues = 373;
  protobuf_fieldNumber = 374;
  protobuf_generated_isEqualTo = 375;
  protobuf_nameMap = 376;
  protobuf_newField = 377;
  protobuf_package = 378;
  protocol = 379;
  protoFieldName = 380;
  protoMessageName = 381;
  ProtoNameProviding = 382;
  protoPaths = 383;
  public = 384;
  putBoolValue = 385;
  putBytesValue = 386;
  putDoubleValue = 387;
  putEnumValue = 388;
  putFixedUInt32 = 389;
  putFixedUInt64 = 390;
  putFloatValue = 391;
  putInt64 = 392;
  putStringValue = 393;
  putUInt64 = 394;
  putUInt64Hex = 395;
  putVarInt = 396;
  putZigZagVarInt = 397;
  rawChars = 398;
  RawRepresentable = 399;
  RawValue = 400;
  register = 401;
  RepeatedEnumExtensionField = 402;
  RepeatedExtensionField = 403;
  RepeatedGroupExtensionField = 404;
  RepeatedMessageExtensionField = 405;
  requestStreaming = 406;
  requestTypeURL = 407;
  requiredSize = 408;
  responseStreaming = 409;
  responseTypeURL = 410;
  result = 411;
  return = 412;
  revision = 413;
  rhs = 414;
  root = 415;
  s = 416;
  sawBackslash = 417;
  scanner = 418;
  seconds = 419;
  self = 420;
  separator = 421;
  serializedData = 422;
  serializedSize = 423;
  set = 424;
  setExtensionValue = 425;
  shift = 426;
  SimpleExtensionMap = 427;
  sizer = 428;
  source = 429;
  sourceContext = 430;
  sourceEncoding = 431;
  split = 432;
  start = 433;
  startArray = 434;
  startField = 435;
  startIndex = 436;
  startMessageField = 437;
  startObject = 438;
  startRegularField = 439;
  state = 440;
  static = 441;
  StaticString = 442;
  storage = 443;
  String = 444;
  stringLiteral = 445;
  StringLiteralType = 446;
  stringResult = 447;
  stringValue = 448;
  struct = 449;
  structValue = 450;
  subDecoder = 451;
  subscript = 452;
  SwiftProtobuf = 453;
  syntax = 454;
  T = 455;
  tag = 456;
  terminator = 457;
  testDecoder = 458;
  text = 459;
  textDecoder = 460;
  TextFormatDecoder = 461;
  TextFormatDecodingError = 462;
  TextFormatEncodingVisitor = 463;
  textFormatString = 464;
  throws = 465;
  timeInterval = 466;
  timeIntervalSince1970 = 467;
  timeIntervalSinceReferenceDate = 468;
  Timestamp = 469;
  total = 470;
  traverse = 471;
  true = 472;
  try = 473;
  type = 474;
  typealias = 475;
  typePrefix = 476;
  typeStart = 477;
  typeUnknown = 478;
  typeURL = 479;
  UInt32 = 480;
  UInt32Value = 481;
  UInt64 = 482;
  UInt64Value = 483;
  UInt8 = 484;
  unicodeScalarLiteral = 485;
  UnicodeScalarLiteralType = 486;
  unicodeScalars = 487;
  UnicodeScalarView = 488;
  union = 489;
  unknown = 490;
  unknownFields = 491;
  UnknownStorage = 492;
  unpackTo = 493;
  UnsafeBufferPointer = 494;
  UnsafeMutablePointer = 495;
  UnsafePointer = 496;
  updatedOptions = 497;
  url = 498;
  utf8 = 499;
  utf8Codec = 500;
  utf8ToDouble = 501;
  UTF8View = 502;
  v = 503;
  value = 504;
  valueField = 505;
  values = 506;
  ValueType = 507;
  var = 508;
  Version = 509;
  versionString = 510;
  visitExtensionFields = 511;
  visitMapField = 512;
  visitor = 513;
  visitPacked = 514;
  visitPackedBoolField = 515;
  visitPackedDoubleField = 516;
  visitPackedEnumField = 517;
  visitPackedFixed32Field = 518;
  visitPackedFixed64Field = 519;
  visitPackedFloatField = 520;
  visitPackedInt32Field = 521;
  visitPackedInt64Field = 522;
  visitPackedSFixed32Field = 523;
  visitPackedSFixed64Field = 524;
  visitPackedSInt32Field = 525;
  visitPackedSInt64Field = 526;
  visitPackedUInt32Field = 527;
  visitPackedUInt64Field = 528;
  visitRepeated = 529;
  visitRepeatedBoolField = 530;
  visitRepeatedBytesField = 531;
  visitRepeatedDoubleField = 532;
  visitRepeatedEnumField = 533;
  visitRepeatedFixed32Field = 534;
  visitRepeatedFixed64Field = 535;
  visitRepeatedFloatField = 536;
  visitRepeatedGroupField = 537;
  visitRepeatedInt32Field = 538;
  visitRepeatedInt64Field = 539;
  visitRepeatedMessageField = 540;
  visitRepeatedSFixed32Field = 541;
  visitRepeatedSFixed64Field = 542;
  visitRepeatedSInt32Field = 543;
  visitRepeatedSInt64Field = 544;
  visitRepeatedStringField = 545;
  visitRepeatedUInt32Field = 546;
  visitRepeatedUInt64Field = 547;
  visitSingular = 548;
  visitSingularBoolField = 549;
  visitSingularBytesField = 550;
  visitSingularDoubleField = 551;
  visitSingularEnumField = 552;
  visitSingularFixed32Field = 553;
  visitSingularFixed64Field = 554;
  visitSingularFloatField = 555;
  visitSingularGroupField = 556;
  visitSingularInt32Field = 557;
  visitSingularInt64Field = 558;
  visitSingularMessageField = 559;
  visitSingularSFixed32Field = 560;
  visitSingularSFixed64Field = 561;
  visitSingularSInt32Field = 562;
  visitSingularSInt64Field = 563;
  visitSingularStringField = 564;
  visitSingularUInt32Field = 565;
  visitSingularUInt64Field = 566;
  visitUnknown = 567;
  where = 568;
  wireFormat = 569;
  with = 570;
  WrappedType = 571;
  yday = 572;
}
