// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package protobuf_unittest;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  a = 1;
  adjusted = 2;
  any = 3;
  AnyExtensionField = 4;
  AnyMessageExtension = 5;
  AnyMessageStorage = 6;
  Api = 7;
  appended = 8;
  appendUIntHex = 9;
  appendUnknown = 10;
  are = 11;
  areAllInitialized = 12;
  array = 13;
  arrayLiteral = 14;
  arraySeparator = 15;
  as = 16;
  asciiOpenCurlyBracket = 17;
  asciiZero = 18;
  asJSONObject = 19;
  available = 20;
  b = 21;
  base64String = 22;
  BaseType = 23;
  because = 24;
  binary = 25;
  BinaryDecoder = 26;
  BinaryEncoder = 27;
  BinaryEncodingSizeVisitor = 28;
  BinaryEncodingVisitor = 29;
  bits = 30;
  body = 31;
  bodySize = 32;
  Bool = 33;
  booleanLiteral = 34;
  BooleanLiteralType = 35;
  boolValue = 36;
  buffer = 37;
  buildTypeURL = 38;
  by = 39;
  bytes = 40;
  BytesValue = 41;
  c = 42;
  capitalizeNext = 43;
  cardinality = 44;
  Character = 45;
  characters = 46;
  chars = 47;
  clearExtensionValue = 48;
  clearSourceContext = 49;
  clearValue = 50;
  Collection = 51;
  consume = 52;
  contentJSON = 53;
  contentsOf = 54;
  count = 55;
  customCodable = 56;
  d = 57;
  Data = 58;
  dataResult = 59;
  dataSize = 60;
  date = 61;
  daySec = 62;
  daysSinceEpoch = 63;
  DD = 64;
  debugDescription = 65;
  decodeBytes = 66;
  decoded = 67;
  decodedFromJSONNull = 68;
  decodeExtensionField = 69;
  decodeJSON = 70;
  decodeMapField = 71;
  decodeMessage = 72;
  decoder = 73;
  decodeRepeated = 74;
  decodeRepeatedBoolField = 75;
  decodeRepeatedBytesField = 76;
  decodeRepeatedDoubleField = 77;
  decodeRepeatedEnumField = 78;
  decodeRepeatedFixed32Field = 79;
  decodeRepeatedFixed64Field = 80;
  decodeRepeatedFloatField = 81;
  decodeRepeatedGroupField = 82;
  decodeRepeatedInt32Field = 83;
  decodeRepeatedInt64Field = 84;
  decodeRepeatedMessageField = 85;
  decodeRepeatedSFixed32Field = 86;
  decodeRepeatedSFixed64Field = 87;
  decodeRepeatedSInt32Field = 88;
  decodeRepeatedSInt64Field = 89;
  decodeRepeatedStringField = 90;
  decodeRepeatedUInt32Field = 91;
  decodeRepeatedUInt64Field = 92;
  decodeSingular = 93;
  decodeSingularBoolField = 94;
  decodeSingularBytesField = 95;
  decodeSingularDoubleField = 96;
  decodeSingularEnumField = 97;
  decodeSingularFixed32Field = 98;
  decodeSingularFixed64Field = 99;
  decodeSingularFloatField = 100;
  decodeSingularGroupField = 101;
  decodeSingularInt32Field = 102;
  decodeSingularInt64Field = 103;
  decodeSingularMessageField = 104;
  decodeSingularSFixed32Field = 105;
  decodeSingularSFixed64Field = 106;
  decodeSingularSInt32Field = 107;
  decodeSingularSInt64Field = 108;
  decodeSingularStringField = 109;
  decodeSingularUInt32Field = 110;
  decodeSingularUInt64Field = 111;
  decodeString = 112;
  decodeTextFormat = 113;
  defaultValue = 114;
  description = 115;
  destination = 116;
  Dictionary = 117;
  dictionaryLiteral = 118;
  digit0 = 119;
  digit1 = 120;
  digitCount = 121;
  digits = 122;
  digitValue = 123;
  discardableResult = 124;
  DispatchQueue = 125;
  div = 126;
  double = 127;
  doubleToUtf8 = 128;
  DoubleValue = 129;
  Duration = 130;
  E = 131;
  Element = 132;
  elements = 133;
  emitExtensionFieldName = 134;
  emitFieldName = 135;
  emitFieldNumber = 136;
  emitVerboseTextForm = 137;
  Empty = 138;
  emptyData = 139;
  encoded = 140;
  encodedJSONString = 141;
  encodedSize = 142;
  encodeField = 143;
  encoder = 144;
  end = 145;
  endArray = 146;
  endMessageField = 147;
  endObject = 148;
  endRegularField = 149;
  Enum = 150;
  enumvalue = 151;
  Equatable = 152;
  ext = 153;
  extendedGraphemeClusterLiteral = 154;
  ExtendedGraphemeClusterLiteralType = 155;
  ExtensionFieldValueSet = 156;
  ExtensionMap = 157;
  extensions = 158;
  extras = 159;
  f = 160;
  false = 161;
  fastUtf8ToString = 162;
  field = 163;
  FieldMask = 164;
  fieldName = 165;
  fieldNameCount = 166;
  fieldNumber = 167;
  fieldNumberForProto = 168;
  fields = 169;
  fieldSize = 170;
  FieldTag = 171;
  fieldType = 172;
  fieldValue = 173;
  fileName = 174;
  fileprivate = 175;
  firstItem = 176;
  flatMap = 177;
  float = 178;
  floatLiteral = 179;
  FloatLiteralType = 180;
  floatToUtf8 = 181;
  FloatValue = 182;
  for = 183;
  formatDuration = 184;
  formatTimestamp = 185;
  forMessage = 186;
  forMessageName = 187;
  forReadingFrom = 188;
  forTypeURL = 189;
  forWritingInto = 190;
  from = 191;
  fromAscii2 = 192;
  fromAscii4 = 193;
  fromHexDigit = 194;
  fromJSONString = 195;
  fromJSONUTF8Data = 196;
  fromMessage = 197;
  fromURL = 198;
  func = 199;
  Functions = 200;
  G = 201;
  generated = 202;
  get = 203;
  getExtensionValue = 204;
  Google_Protobuf_Any = 205;
  Google_Protobuf_Api = 206;
  Google_Protobuf_BoolValue = 207;
  Google_Protobuf_BytesValue = 208;
  Google_Protobuf_DoubleValue = 209;
  Google_Protobuf_Duration = 210;
  Google_Protobuf_Empty = 211;
  Google_Protobuf_Enum = 212;
  Google_Protobuf_EnumValue = 213;
  Google_Protobuf_Field = 214;
  Google_Protobuf_FieldMask = 215;
  Google_Protobuf_FloatValue = 216;
  Google_Protobuf_Int32Value = 217;
  Google_Protobuf_Int64Value = 218;
  Google_Protobuf_ListValue = 219;
  Google_Protobuf_Method = 220;
  Google_Protobuf_Mixin = 221;
  Google_Protobuf_NullValue = 222;
  Google_Protobuf_Option = 223;
  Google_Protobuf_SourceContext = 224;
  Google_Protobuf_StringValue = 225;
  Google_Protobuf_Struct = 226;
  Google_Protobuf_Syntax = 227;
  Google_Protobuf_Timestamp = 228;
  Google_Protobuf_Type = 229;
  Google_Protobuf_UInt32Value = 230;
  Google_Protobuf_UInt64Value = 231;
  Google_Protobuf_Value = 232;
  gregorianDateFromSecondsSince1970 = 233;
  group = 234;
  h = 235;
  handleConflictingOneOf = 236;
  has = 237;
  hasExtensionValue = 238;
  hash = 239;
  Hashable = 240;
  hashValue = 241;
  HashVisitor = 242;
  hasSourceContext = 243;
  hasValue = 244;
  hh = 245;
  hour = 246;
  i = 247;
  index = 248;
  init = 249;
  inout = 250;
  insert = 251;
  insertIntoSet = 252;
  Int = 253;
  Int32 = 254;
  Int32Value = 255;
  Int64 = 256;
  Int64Value = 257;
  Int8 = 258;
  integerLiteral = 259;
  IntegerLiteralType = 260;
  intern = 261;
  Internal = 262;
  InternalState = 263;
  isA = 264;
  isEqual = 265;
  isEqualTo = 266;
  isInitialized = 267;
  it = 268;
  Iterator = 269;
  i_2166136261 = 270;
  json = 271;
  JSONDecoder = 272;
  jsonEncoder = 273;
  JSONEncodingVisitor = 274;
  JSONMapEncodingVisitor = 275;
  jsonName = 276;
  jsonPath = 277;
  jsonPaths = 278;
  JSONScanner = 279;
  jsonString = 280;
  jsonText = 281;
  JSONToProto = 282;
  jsonUTF8Data = 283;
  julianDayNumberFromSecondsSince1970 = 284;
  k = 285;
  Key = 286;
  keyField = 287;
  KeyType = 288;
  kind = 289;
  knownTypes = 290;
  l = 291;
  label = 292;
  length = 293;
  let = 294;
  lhs = 295;
  listOfMessages = 296;
  listValue = 297;
  littleEndian = 298;
  littleEndianBytes = 299;
  M = 300;
  major = 301;
  makeIterator = 302;
  mapHash = 303;
  mapNameResolver = 304;
  mapToMessages = 305;
  MapValueType = 306;
  mapVisitor = 307;
  mdayStart = 308;
  members = 309;
  merge = 310;
  message = 311;
  MessageExtension = 312;
  messageType = 313;
  Method = 314;
  methods = 315;
  minor = 316;
  Mixin = 317;
  mixins = 318;
  mm = 319;
  mod = 320;
  month = 321;
  mutating = 322;
  n = 323;
  name = 324;
  NameDescription = 325;
  NameMap = 326;
  nameResolver = 327;
  names = 328;
  nanos = 329;
  nativeBytes = 330;
  nativeEndianBytes = 331;
  newL = 332;
  newValue = 333;
  nextFieldNumber = 334;
  nil = 335;
  nilLiteral = 336;
  no = 337;
  normalizeForDuration = 338;
  normalizeForTimestamp = 339;
  nullValue = 340;
  number = 341;
  numberValue = 342;
  of = 343;
  oneofIndex = 344;
  oneofs = 345;
  OneOf_Kind = 346;
  only = 347;
  Option = 348;
  OptionalEnumExtensionField = 349;
  OptionalExtensionField = 350;
  OptionalGroupExtensionField = 351;
  OptionalMessageExtensionField = 352;
  options = 353;
  org = 354;
  other = 355;
  out = 356;
  output = 357;
  p = 358;
  packed = 359;
  PackedEnumExtensionField = 360;
  PackedExtensionField = 361;
  packedSize = 362;
  parseBareFloatString = 363;
  parseBareSInt = 364;
  parseBareUInt = 365;
  parseDuration = 366;
  parseJSONFieldNames = 367;
  parseTimestamp = 368;
  partial = 369;
  path = 370;
  paths = 371;
  pointer = 372;
  pos = 373;
  prefix = 374;
  preTraverse = 375;
  private = 376;
  proto = 377;
  proto2 = 378;
  proto3DefaultValue = 379;
  protobuf = 380;
  ProtobufBool = 381;
  ProtobufBytes = 382;
  ProtobufDouble = 383;
  ProtobufEnumMap = 384;
  protobufExtension = 385;
  ProtobufFloat = 386;
  ProtobufInt32 = 387;
  ProtobufInt64 = 388;
  ProtobufMap = 389;
  ProtobufMessageMap = 390;
  ProtobufString = 391;
  ProtobufUInt32 = 392;
  ProtobufUInt64 = 393;
  protobuf_extensionFieldValues = 394;
  protobuf_fieldNumber = 395;
  protobuf_generated_isEqualTo = 396;
  protobuf_nameMap = 397;
  protobuf_newField = 398;
  protobuf_package = 399;
  protoFieldName = 400;
  protoMessageName = 401;
  protoPaths = 402;
  ProtoToJSON = 403;
  public = 404;
  putBoolValue = 405;
  putBytesValue = 406;
  putDoubleValue = 407;
  putEnumValue = 408;
  putFixedUInt32 = 409;
  putFixedUInt64 = 410;
  putFloatValue = 411;
  putInt64 = 412;
  putStringValue = 413;
  putUInt64 = 414;
  putUInt64Hex = 415;
  putVarInt = 416;
  putZigZagVarInt = 417;
  RawValue = 418;
  register = 419;
  RepeatedEnumExtensionField = 420;
  RepeatedExtensionField = 421;
  RepeatedGroupExtensionField = 422;
  RepeatedMessageExtensionField = 423;
  requestStreaming = 424;
  requestTypeURL = 425;
  requiredSize = 426;
  responseStreaming = 427;
  responseTypeURL = 428;
  result = 429;
  return = 430;
  revision = 431;
  rhs = 432;
  root = 433;
  s = 434;
  savedPosition = 435;
  sawBackslash = 436;
  scanner = 437;
  seconds = 438;
  self = 439;
  separator = 440;
  serializeAnyJSON = 441;
  serializedData = 442;
  serializedSize = 443;
  serialQueue = 444;
  set = 445;
  setExtensionValue = 446;
  shift = 447;
  SignedInteger = 448;
  SimpleExtensionMap = 449;
  sizer = 450;
  slowUtf8ToString = 451;
  source = 452;
  sourceContext = 453;
  split = 454;
  ss = 455;
  start = 456;
  startArray = 457;
  startField = 458;
  startIndex = 459;
  startMessageField = 460;
  startObject = 461;
  startRegularField = 462;
  state = 463;
  static = 464;
  StaticString = 465;
  storage = 466;
  StorageClass = 467;
  String = 468;
  stringLiteral = 469;
  StringLiteralType = 470;
  stringResult = 471;
  stringValue = 472;
  Struct = 473;
  structValue = 474;
  subDecoder = 475;
  subscript = 476;
  swift = 477;
  SwiftProtobuf = 478;
  syntax = 479;
  T = 480;
  tag = 481;
  target = 482;
  terminator = 483;
  testDecoder = 484;
  text = 485;
  textDecoder = 486;
  TextFormatDecoder = 487;
  TextFormatEncoder = 488;
  TextFormatEncodingVisitor = 489;
  TextFormatScanner = 490;
  textFormatString = 491;
  that = 492;
  they = 493;
  throws = 494;
  timeInterval = 495;
  timeIntervalSince1970 = 496;
  timeIntervalSinceReferenceDate = 497;
  timeOfDayFromSecondsSince1970 = 498;
  Timestamp = 499;
  toJsonFieldName = 500;
  total = 501;
  traverse = 502;
  true = 503;
  try = 504;
  Type = 505;
  typealias = 506;
  typeName = 507;
  typePrefix = 508;
  typeRegistry = 509;
  typeStart = 510;
  typeUnknown = 511;
  typeURL = 512;
  UInt32 = 513;
  UInt32Value = 514;
  UInt64 = 515;
  UInt64Value = 516;
  UInt8 = 517;
  UnicodeScalar = 518;
  unicodeScalarLiteral = 519;
  UnicodeScalarLiteralType = 520;
  unicodeScalars = 521;
  UnicodeScalarView = 522;
  union = 523;
  uniqueStorage = 524;
  unknown = 525;
  unknownData = 526;
  unknownFields = 527;
  UnknownStorage = 528;
  unpack = 529;
  unpackTo = 530;
  UnsafeBufferPointer = 531;
  UnsafeMutablePointer = 532;
  UnsafeMutableRawBufferPointer = 533;
  UnsafePointer = 534;
  url = 535;
  used = 536;
  utf8 = 537;
  utf8Buffer = 538;
  utf8Codec = 539;
  utf8ToDouble = 540;
  utf8ToString = 541;
  UTF8View = 542;
  v = 543;
  value = 544;
  valueField = 545;
  values = 546;
  ValueType = 547;
  var = 548;
  version = 549;
  versionString = 550;
  visitExtensionFields = 551;
  visitMapField = 552;
  visitor = 553;
  visitPacked = 554;
  visitPackedBoolField = 555;
  visitPackedDoubleField = 556;
  visitPackedEnumField = 557;
  visitPackedFixed32Field = 558;
  visitPackedFixed64Field = 559;
  visitPackedFloatField = 560;
  visitPackedInt32Field = 561;
  visitPackedInt64Field = 562;
  visitPackedSFixed32Field = 563;
  visitPackedSFixed64Field = 564;
  visitPackedSInt32Field = 565;
  visitPackedSInt64Field = 566;
  visitPackedUInt32Field = 567;
  visitPackedUInt64Field = 568;
  visitRepeated = 569;
  visitRepeatedBoolField = 570;
  visitRepeatedBytesField = 571;
  visitRepeatedDoubleField = 572;
  visitRepeatedEnumField = 573;
  visitRepeatedFixed32Field = 574;
  visitRepeatedFixed64Field = 575;
  visitRepeatedFloatField = 576;
  visitRepeatedGroupField = 577;
  visitRepeatedInt32Field = 578;
  visitRepeatedInt64Field = 579;
  visitRepeatedMessageField = 580;
  visitRepeatedSFixed32Field = 581;
  visitRepeatedSFixed64Field = 582;
  visitRepeatedSInt32Field = 583;
  visitRepeatedSInt64Field = 584;
  visitRepeatedStringField = 585;
  visitRepeatedUInt32Field = 586;
  visitRepeatedUInt64Field = 587;
  visitSingular = 588;
  visitSingularBoolField = 589;
  visitSingularBytesField = 590;
  visitSingularDoubleField = 591;
  visitSingularEnumField = 592;
  visitSingularFixed32Field = 593;
  visitSingularFixed64Field = 594;
  visitSingularFloatField = 595;
  visitSingularGroupField = 596;
  visitSingularInt32Field = 597;
  visitSingularInt64Field = 598;
  visitSingularMessageField = 599;
  visitSingularSFixed32Field = 600;
  visitSingularSFixed64Field = 601;
  visitSingularSInt32Field = 602;
  visitSingularSInt64Field = 603;
  visitSingularStringField = 604;
  visitSingularUInt32Field = 605;
  visitSingularUInt64Field = 606;
  visitUnknown = 607;
  where = 608;
  wireFormat = 609;
  with = 610;
  WrappedType = 611;
  wrapped_vsnprintf = 612;
  yday = 613;
  YY = 614;
}
