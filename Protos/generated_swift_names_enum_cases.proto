// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package protobuf_unittest;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  adjusted = 1;
  any = 2;
  AnyExtensionField = 3;
  AnyMessageExtension = 4;
  AnyMessageStorage = 5;
  AnyUnpackError = 6;
  Api = 7;
  appended = 8;
  appendUIntHex = 9;
  appendUnknown = 10;
  areAllInitialized = 11;
  array = 12;
  arrayLiteral = 13;
  arraySeparator = 14;
  as = 15;
  asciiOpenCurlyBracket = 16;
  asciiZero = 17;
  available = 18;
  b = 19;
  BaseType = 20;
  binary = 21;
  BinaryDecoder = 22;
  BinaryDecodingError = 23;
  BinaryDecodingOptions = 24;
  BinaryEncoder = 25;
  BinaryEncodingError = 26;
  BinaryEncodingMessageSetSizeVisitor = 27;
  BinaryEncodingMessageSetVisitor = 28;
  BinaryEncodingSizeVisitor = 29;
  BinaryEncodingVisitor = 30;
  bodySize = 31;
  Bool = 32;
  booleanLiteral = 33;
  BooleanLiteralType = 34;
  boolValue = 35;
  buffer = 36;
  bytes = 37;
  bytesInGroup = 38;
  BytesValue = 39;
  c = 40;
  capitalizeNext = 41;
  cardinality = 42;
  Character = 43;
  characters = 44;
  chars = 45;
  class = 46;
  clearExtensionValue = 47;
  clearSourceContext = 48;
  clearValue = 49;
  codeUnits = 50;
  Collection = 51;
  contentsOf = 52;
  count = 53;
  customCodable = 54;
  CustomDebugStringConvertible = 55;
  d = 56;
  Data = 57;
  dataPointer = 58;
  dataResult = 59;
  dataSize = 60;
  date = 61;
  daySec = 62;
  daysSinceEpoch = 63;
  debugDescription = 64;
  decoded = 65;
  decodedFromJSONNull = 66;
  decodeExtensionField = 67;
  decodeExtensionFieldsAsMessageSet = 68;
  decodeJSON = 69;
  decodeMapField = 70;
  decodeMessage = 71;
  decoder = 72;
  decodeRepeated = 73;
  decodeRepeatedBoolField = 74;
  decodeRepeatedBytesField = 75;
  decodeRepeatedDoubleField = 76;
  decodeRepeatedEnumField = 77;
  decodeRepeatedFixed32Field = 78;
  decodeRepeatedFixed64Field = 79;
  decodeRepeatedFloatField = 80;
  decodeRepeatedGroupField = 81;
  decodeRepeatedInt32Field = 82;
  decodeRepeatedInt64Field = 83;
  decodeRepeatedMessageField = 84;
  decodeRepeatedSFixed32Field = 85;
  decodeRepeatedSFixed64Field = 86;
  decodeRepeatedSInt32Field = 87;
  decodeRepeatedSInt64Field = 88;
  decodeRepeatedStringField = 89;
  decodeRepeatedUInt32Field = 90;
  decodeRepeatedUInt64Field = 91;
  decodeSingular = 92;
  decodeSingularBoolField = 93;
  decodeSingularBytesField = 94;
  decodeSingularDoubleField = 95;
  decodeSingularEnumField = 96;
  decodeSingularFixed32Field = 97;
  decodeSingularFixed64Field = 98;
  decodeSingularFloatField = 99;
  decodeSingularGroupField = 100;
  decodeSingularInt32Field = 101;
  decodeSingularInt64Field = 102;
  decodeSingularMessageField = 103;
  decodeSingularSFixed32Field = 104;
  decodeSingularSFixed64Field = 105;
  decodeSingularSInt32Field = 106;
  decodeSingularSInt64Field = 107;
  decodeSingularStringField = 108;
  decodeSingularUInt32Field = 109;
  decodeSingularUInt64Field = 110;
  decodeTextFormat = 111;
  defaultValue = 112;
  description = 113;
  Dictionary = 114;
  dictionaryLiteral = 115;
  digit = 116;
  digit0 = 117;
  digit1 = 118;
  digitCount = 119;
  digits = 120;
  digitValue = 121;
  discardableResult = 122;
  discardUnknownFields = 123;
  double = 124;
  doubleToUtf8 = 125;
  DoubleValue = 126;
  Duration = 127;
  E = 128;
  Element = 129;
  elements = 130;
  emitExtensionFieldName = 131;
  emitFieldName = 132;
  emitFieldNumber = 133;
  Empty = 134;
  emptyData = 135;
  encoded = 136;
  encodedJSONString = 137;
  encodedSize = 138;
  encodeField = 139;
  encoder = 140;
  end = 141;
  endArray = 142;
  endMessageField = 143;
  endObject = 144;
  endRegularField = 145;
  enum = 146;
  enumvalue = 147;
  Equatable = 148;
  Error = 149;
  ExpressibleByArrayLiteral = 150;
  ExpressibleByDictionaryLiteral = 151;
  ext = 152;
  extDecoder = 153;
  extendedGraphemeClusterLiteral = 154;
  ExtendedGraphemeClusterLiteralType = 155;
  ExtensibleMessage = 156;
  extension = 157;
  ExtensionField = 158;
  extensionFieldNumber = 159;
  ExtensionFieldValueSet = 160;
  ExtensionMap = 161;
  extensions = 162;
  extras = 163;
  f = 164;
  false = 165;
  field = 166;
  fieldData = 167;
  FieldMask = 168;
  fieldName = 169;
  fieldNameCount = 170;
  fieldNum = 171;
  fieldNumber = 172;
  fieldNumberForProto = 173;
  fields = 174;
  fieldSize = 175;
  FieldTag = 176;
  fieldType = 177;
  fieldValue = 178;
  fileName = 179;
  firstItem = 180;
  flatMap = 181;
  float = 182;
  floatLiteral = 183;
  FloatLiteralType = 184;
  floatToUtf8 = 185;
  FloatValue = 186;
  forMessageName = 187;
  formUnion = 188;
  forReadingFrom = 189;
  forTypeURL = 190;
  ForwardParser = 191;
  forWritingInto = 192;
  from = 193;
  fromAscii2 = 194;
  fromAscii4 = 195;
  fromHexDigit = 196;
  func = 197;
  G = 198;
  get = 199;
  getExtensionValue = 200;
  Google_Protobuf_Any = 201;
  Google_Protobuf_Api = 202;
  Google_Protobuf_BoolValue = 203;
  Google_Protobuf_BytesValue = 204;
  Google_Protobuf_DoubleValue = 205;
  Google_Protobuf_Duration = 206;
  Google_Protobuf_Empty = 207;
  Google_Protobuf_Enum = 208;
  Google_Protobuf_EnumValue = 209;
  Google_Protobuf_Field = 210;
  Google_Protobuf_FieldMask = 211;
  Google_Protobuf_FloatValue = 212;
  Google_Protobuf_Int32Value = 213;
  Google_Protobuf_Int64Value = 214;
  Google_Protobuf_ListValue = 215;
  Google_Protobuf_Method = 216;
  Google_Protobuf_Mixin = 217;
  Google_Protobuf_NullValue = 218;
  Google_Protobuf_Option = 219;
  Google_Protobuf_SourceContext = 220;
  Google_Protobuf_StringValue = 221;
  Google_Protobuf_Struct = 222;
  Google_Protobuf_Syntax = 223;
  Google_Protobuf_Timestamp = 224;
  Google_Protobuf_Type = 225;
  Google_Protobuf_UInt32Value = 226;
  Google_Protobuf_UInt64Value = 227;
  Google_Protobuf_Value = 228;
  group = 229;
  groupSize = 230;
  h = 231;
  handleConflictingOneOf = 232;
  hasExtensionValue = 233;
  hash = 234;
  Hashable = 235;
  hashValue = 236;
  HashVisitor = 237;
  hasSourceContext = 238;
  hasValue = 239;
  hour = 240;
  i = 241;
  index = 242;
  init = 243;
  inout = 244;
  insert = 245;
  Int = 246;
  Int32 = 247;
  Int32Value = 248;
  Int64 = 249;
  Int64Value = 250;
  Int8 = 251;
  integerLiteral = 252;
  IntegerLiteralType = 253;
  intern = 254;
  Internal = 255;
  InternalState = 256;
  isA = 257;
  isEqual = 258;
  isEqualTo = 259;
  isInitialized = 260;
  it = 261;
  itemTagsEncodedSize = 262;
  Iterator = 263;
  i_2166136261 = 264;
  JSONDecoder = 265;
  JSONDecodingError = 266;
  JSONDecodingOptions = 267;
  jsonEncoder = 268;
  JSONEncodingError = 269;
  JSONEncodingVisitor = 270;
  JSONMapEncodingVisitor = 271;
  jsonName = 272;
  jsonPath = 273;
  jsonPaths = 274;
  JSONScanner = 275;
  jsonString = 276;
  jsonText = 277;
  jsonUTF8Data = 278;
  k = 279;
  Key = 280;
  keyField = 281;
  KeyType = 282;
  kind = 283;
  l = 284;
  length = 285;
  let = 286;
  lhs = 287;
  listOfMessages = 288;
  listValue = 289;
  littleEndian = 290;
  littleEndianBytes = 291;
  M = 292;
  major = 293;
  makeIterator = 294;
  mapHash = 295;
  MapKeyType = 296;
  mapNameResolver = 297;
  mapToMessages = 298;
  MapValueType = 299;
  mapVisitor = 300;
  mdayStart = 301;
  merge = 302;
  message = 303;
  messageDepthLimit = 304;
  MessageExtension = 305;
  MessageImplementationBase = 306;
  MessageSet = 307;
  messageType = 308;
  Method = 309;
  methods = 310;
  minor = 311;
  Mixin = 312;
  mixins = 313;
  month = 314;
  msgExtension = 315;
  mutating = 316;
  n = 317;
  name = 318;
  NameDescription = 319;
  NameMap = 320;
  nameResolver = 321;
  names = 322;
  nanos = 323;
  nativeBytes = 324;
  nativeEndianBytes = 325;
  newL = 326;
  newValue = 327;
  nextFieldNumber = 328;
  nil = 329;
  nilLiteral = 330;
  nullValue = 331;
  number = 332;
  numberValue = 333;
  of = 334;
  oneofIndex = 335;
  oneofs = 336;
  OneOf_Kind = 337;
  Option = 338;
  OptionalEnumExtensionField = 339;
  OptionalExtensionField = 340;
  OptionalGroupExtensionField = 341;
  OptionalMessageExtensionField = 342;
  options = 343;
  other = 344;
  others = 345;
  out = 346;
  output = 347;
  p = 348;
  packed = 349;
  PackedEnumExtensionField = 350;
  PackedExtensionField = 351;
  packedSize = 352;
  padding = 353;
  parent = 354;
  partial = 355;
  path = 356;
  paths = 357;
  payload = 358;
  payloadSize = 359;
  pointer = 360;
  pos = 361;
  prefix = 362;
  preTraverse = 363;
  proto2 = 364;
  proto3DefaultValue = 365;
  ProtobufAPIVersionCheck = 366;
  ProtobufAPIVersion_2 = 367;
  ProtobufBool = 368;
  ProtobufBytes = 369;
  ProtobufDouble = 370;
  ProtobufEnumMap = 371;
  protobufExtension = 372;
  ProtobufFixed32 = 373;
  ProtobufFixed64 = 374;
  ProtobufFloat = 375;
  ProtobufInt32 = 376;
  ProtobufInt64 = 377;
  ProtobufMap = 378;
  ProtobufMessageMap = 379;
  ProtobufSFixed32 = 380;
  ProtobufSFixed64 = 381;
  ProtobufSInt32 = 382;
  ProtobufSInt64 = 383;
  ProtobufString = 384;
  ProtobufUInt32 = 385;
  ProtobufUInt64 = 386;
  protobuf_extensionFieldValues = 387;
  protobuf_fieldNumber = 388;
  protobuf_generated_isEqualTo = 389;
  protobuf_nameMap = 390;
  protobuf_newField = 391;
  protobuf_package = 392;
  protocol = 393;
  protoFieldName = 394;
  protoMessageName = 395;
  ProtoNameProviding = 396;
  protoPaths = 397;
  public = 398;
  putBoolValue = 399;
  putBytesValue = 400;
  putDoubleValue = 401;
  putEnumValue = 402;
  putFixedUInt32 = 403;
  putFixedUInt64 = 404;
  putFloatValue = 405;
  putInt64 = 406;
  putStringValue = 407;
  putUInt64 = 408;
  putUInt64Hex = 409;
  putVarInt = 410;
  putZigZagVarInt = 411;
  rawChars = 412;
  RawRepresentable = 413;
  RawValue = 414;
  register = 415;
  RepeatedEnumExtensionField = 416;
  RepeatedExtensionField = 417;
  RepeatedGroupExtensionField = 418;
  RepeatedMessageExtensionField = 419;
  requestStreaming = 420;
  requestTypeURL = 421;
  requiredSize = 422;
  responseStreaming = 423;
  responseTypeURL = 424;
  result = 425;
  return = 426;
  revision = 427;
  rhs = 428;
  root = 429;
  s = 430;
  sawBackslash = 431;
  scanner = 432;
  seconds = 433;
  self = 434;
  separator = 435;
  serializedData = 436;
  serializedSize = 437;
  set = 438;
  setExtensionValue = 439;
  shift = 440;
  SimpleExtensionMap = 441;
  sizer = 442;
  source = 443;
  sourceContext = 444;
  sourceEncoding = 445;
  split = 446;
  start = 447;
  startArray = 448;
  startField = 449;
  startIndex = 450;
  startMessageField = 451;
  startObject = 452;
  startRegularField = 453;
  state = 454;
  static = 455;
  StaticString = 456;
  storage = 457;
  String = 458;
  stringLiteral = 459;
  StringLiteralType = 460;
  stringResult = 461;
  stringValue = 462;
  struct = 463;
  structValue = 464;
  subDecoder = 465;
  subscript = 466;
  subVisitor = 467;
  SwiftProtobuf = 468;
  syntax = 469;
  T = 470;
  tag = 471;
  terminator = 472;
  testDecoder = 473;
  text = 474;
  textDecoder = 475;
  TextFormatDecoder = 476;
  TextFormatDecodingError = 477;
  TextFormatEncodingVisitor = 478;
  textFormatString = 479;
  throws = 480;
  timeInterval = 481;
  timeIntervalSince1970 = 482;
  timeIntervalSinceReferenceDate = 483;
  Timestamp = 484;
  total = 485;
  traverse = 486;
  true = 487;
  try = 488;
  type = 489;
  typealias = 490;
  typePrefix = 491;
  typeStart = 492;
  typeUnknown = 493;
  typeURL = 494;
  UInt32 = 495;
  UInt32Value = 496;
  UInt64 = 497;
  UInt64Value = 498;
  UInt8 = 499;
  unicodeScalarLiteral = 500;
  UnicodeScalarLiteralType = 501;
  unicodeScalars = 502;
  UnicodeScalarView = 503;
  union = 504;
  unknown = 505;
  unknownFields = 506;
  UnknownStorage = 507;
  unpackTo = 508;
  UnsafeBufferPointer = 509;
  UnsafeMutablePointer = 510;
  UnsafePointer = 511;
  updatedOptions = 512;
  url = 513;
  utf8 = 514;
  utf8Codec = 515;
  utf8ToDouble = 516;
  UTF8View = 517;
  v = 518;
  value = 519;
  valueField = 520;
  values = 521;
  ValueType = 522;
  var = 523;
  Version = 524;
  versionString = 525;
  visitExtensionFields = 526;
  visitExtensionFieldsAsMessageSet = 527;
  visitMapField = 528;
  visitor = 529;
  visitPacked = 530;
  visitPackedBoolField = 531;
  visitPackedDoubleField = 532;
  visitPackedEnumField = 533;
  visitPackedFixed32Field = 534;
  visitPackedFixed64Field = 535;
  visitPackedFloatField = 536;
  visitPackedInt32Field = 537;
  visitPackedInt64Field = 538;
  visitPackedSFixed32Field = 539;
  visitPackedSFixed64Field = 540;
  visitPackedSInt32Field = 541;
  visitPackedSInt64Field = 542;
  visitPackedUInt32Field = 543;
  visitPackedUInt64Field = 544;
  visitRepeated = 545;
  visitRepeatedBoolField = 546;
  visitRepeatedBytesField = 547;
  visitRepeatedDoubleField = 548;
  visitRepeatedEnumField = 549;
  visitRepeatedFixed32Field = 550;
  visitRepeatedFixed64Field = 551;
  visitRepeatedFloatField = 552;
  visitRepeatedGroupField = 553;
  visitRepeatedInt32Field = 554;
  visitRepeatedInt64Field = 555;
  visitRepeatedMessageField = 556;
  visitRepeatedSFixed32Field = 557;
  visitRepeatedSFixed64Field = 558;
  visitRepeatedSInt32Field = 559;
  visitRepeatedSInt64Field = 560;
  visitRepeatedStringField = 561;
  visitRepeatedUInt32Field = 562;
  visitRepeatedUInt64Field = 563;
  visitSingular = 564;
  visitSingularBoolField = 565;
  visitSingularBytesField = 566;
  visitSingularDoubleField = 567;
  visitSingularEnumField = 568;
  visitSingularFixed32Field = 569;
  visitSingularFixed64Field = 570;
  visitSingularFloatField = 571;
  visitSingularGroupField = 572;
  visitSingularInt32Field = 573;
  visitSingularInt64Field = 574;
  visitSingularMessageField = 575;
  visitSingularSFixed32Field = 576;
  visitSingularSFixed64Field = 577;
  visitSingularSInt32Field = 578;
  visitSingularSInt64Field = 579;
  visitSingularStringField = 580;
  visitSingularUInt32Field = 581;
  visitSingularUInt64Field = 582;
  visitUnknown = 583;
  wasDecoded = 584;
  where = 585;
  wireFormat = 586;
  with = 587;
  WrappedType = 588;
  yday = 589;
}
