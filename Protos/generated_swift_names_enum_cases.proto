// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package protobuf_unittest;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  a = 1;
  adjusted = 2;
  any = 3;
  AnyExtensionField = 4;
  AnyMessageExtension = 5;
  AnyMessageStorage = 6;
  api = 7;
  appended = 8;
  appendUIntHex = 9;
  appendUnknown = 10;
  are = 11;
  areAllInitialized = 12;
  array = 13;
  arrayLiteral = 14;
  arraySeparator = 15;
  as = 16;
  asciiOpenCurlyBracket = 17;
  asciiZero = 18;
  asJSONObject = 19;
  available = 20;
  b = 21;
  BaseType = 22;
  because = 23;
  binary = 24;
  BinaryDecoder = 25;
  BinaryEncoder = 26;
  BinaryEncodingSizeVisitor = 27;
  BinaryEncodingVisitor = 28;
  blob = 29;
  body = 30;
  bodySize = 31;
  Bool = 32;
  booleanLiteral = 33;
  BooleanLiteralType = 34;
  boolValue = 35;
  buffer = 36;
  buildTypeURL = 37;
  by = 38;
  bytes = 39;
  bytesInGroup = 40;
  BytesValue = 41;
  c = 42;
  capitalizeNext = 43;
  cardinality = 44;
  Character = 45;
  characters = 46;
  chars = 47;
  clearExtensionValue = 48;
  clearSourceContext = 49;
  clearValue = 50;
  Collection = 51;
  consume = 52;
  contentJSON = 53;
  contentsOf = 54;
  count = 55;
  current = 56;
  customCodable = 57;
  d = 58;
  Data = 59;
  dataPointer = 60;
  dataResult = 61;
  dataSize = 62;
  date = 63;
  daySec = 64;
  daysSinceEpoch = 65;
  DD = 66;
  debugDescription = 67;
  decoded = 68;
  decodedFromJSONNull = 69;
  decodeExtensionField = 70;
  decodeJSON = 71;
  decodeMapField = 72;
  decodeMessage = 73;
  decoder = 74;
  decodeRepeated = 75;
  decodeRepeatedBoolField = 76;
  decodeRepeatedBytesField = 77;
  decodeRepeatedDoubleField = 78;
  decodeRepeatedEnumField = 79;
  decodeRepeatedFixed32Field = 80;
  decodeRepeatedFixed64Field = 81;
  decodeRepeatedFloatField = 82;
  decodeRepeatedGroupField = 83;
  decodeRepeatedInt32Field = 84;
  decodeRepeatedInt64Field = 85;
  decodeRepeatedMessageField = 86;
  decodeRepeatedSFixed32Field = 87;
  decodeRepeatedSFixed64Field = 88;
  decodeRepeatedSInt32Field = 89;
  decodeRepeatedSInt64Field = 90;
  decodeRepeatedStringField = 91;
  decodeRepeatedUInt32Field = 92;
  decodeRepeatedUInt64Field = 93;
  decodeSingular = 94;
  decodeSingularBoolField = 95;
  decodeSingularBytesField = 96;
  decodeSingularDoubleField = 97;
  decodeSingularEnumField = 98;
  decodeSingularFixed32Field = 99;
  decodeSingularFixed64Field = 100;
  decodeSingularFloatField = 101;
  decodeSingularGroupField = 102;
  decodeSingularInt32Field = 103;
  decodeSingularInt64Field = 104;
  decodeSingularMessageField = 105;
  decodeSingularSFixed32Field = 106;
  decodeSingularSFixed64Field = 107;
  decodeSingularSInt32Field = 108;
  decodeSingularSInt64Field = 109;
  decodeSingularStringField = 110;
  decodeSingularUInt32Field = 111;
  decodeSingularUInt64Field = 112;
  decodeString = 113;
  decodeTextFormat = 114;
  defaultInstance = 115;
  defaultValue = 116;
  description = 117;
  destination = 118;
  Dictionary = 119;
  dictionaryLiteral = 120;
  digit = 121;
  digit0 = 122;
  digit1 = 123;
  digitCount = 124;
  digits = 125;
  digitValue = 126;
  discardableResult = 127;
  discardUnknownFields = 128;
  DispatchQueue = 129;
  div = 130;
  double = 131;
  doubleToUtf8 = 132;
  DoubleValue = 133;
  Duration = 134;
  E = 135;
  Element = 136;
  elements = 137;
  emitExtensionFieldName = 138;
  emitFieldName = 139;
  emitFieldNumber = 140;
  emitVerboseTextForm = 141;
  Empty = 142;
  emptyData = 143;
  encoded = 144;
  encodedJSONString = 145;
  encodedSize = 146;
  encodeField = 147;
  encoder = 148;
  end = 149;
  endArray = 150;
  endMessageField = 151;
  endObject = 152;
  endRegularField = 153;
  Enum = 154;
  enumvalue = 155;
  Equatable = 156;
  ext = 157;
  extendedGraphemeClusterLiteral = 158;
  ExtendedGraphemeClusterLiteralType = 159;
  ExtensionFieldValueSet = 160;
  extensions = 161;
  extras = 162;
  f = 163;
  false = 164;
  fastUtf8ToString = 165;
  field = 166;
  FieldMask = 167;
  fieldName = 168;
  fieldNameCount = 169;
  fieldNum = 170;
  fieldNumber = 171;
  fieldNumberForProto = 172;
  fields = 173;
  fieldSize = 174;
  FieldTag = 175;
  fieldType = 176;
  fieldValue = 177;
  fileName = 178;
  fileprivate = 179;
  firstItem = 180;
  flatMap = 181;
  float = 182;
  floatLiteral = 183;
  FloatLiteralType = 184;
  floatToUtf8 = 185;
  FloatValue = 186;
  for = 187;
  formatDuration = 188;
  formatTimestamp = 189;
  forMessage = 190;
  forMessageName = 191;
  forReadingFrom = 192;
  forTypeURL = 193;
  forWritingInto = 194;
  from = 195;
  fromAscii2 = 196;
  fromAscii4 = 197;
  fromHexDigit = 198;
  fromMessage = 199;
  fromURL = 200;
  func = 201;
  Functions = 202;
  G = 203;
  generated = 204;
  get = 205;
  getExtensionValue = 206;
  Google_Protobuf_Any = 207;
  Google_Protobuf_Api = 208;
  Google_Protobuf_BoolValue = 209;
  Google_Protobuf_BytesValue = 210;
  Google_Protobuf_DoubleValue = 211;
  Google_Protobuf_Duration = 212;
  Google_Protobuf_Empty = 213;
  Google_Protobuf_Enum = 214;
  Google_Protobuf_EnumValue = 215;
  Google_Protobuf_Field = 216;
  Google_Protobuf_FieldMask = 217;
  Google_Protobuf_FloatValue = 218;
  Google_Protobuf_Int32Value = 219;
  Google_Protobuf_Int64Value = 220;
  Google_Protobuf_ListValue = 221;
  Google_Protobuf_Method = 222;
  Google_Protobuf_Mixin = 223;
  Google_Protobuf_NullValue = 224;
  Google_Protobuf_Option = 225;
  Google_Protobuf_SourceContext = 226;
  Google_Protobuf_StringValue = 227;
  Google_Protobuf_Struct = 228;
  Google_Protobuf_Syntax = 229;
  Google_Protobuf_Timestamp = 230;
  Google_Protobuf_Type = 231;
  Google_Protobuf_UInt32Value = 232;
  Google_Protobuf_UInt64Value = 233;
  Google_Protobuf_Value = 234;
  gregorianDateFromSecondsSince1970 = 235;
  group = 236;
  h = 237;
  handleConflictingOneOf = 238;
  has = 239;
  hasExtensionValue = 240;
  hash = 241;
  Hashable = 242;
  hashValue = 243;
  HashVisitor = 244;
  hasSourceContext = 245;
  hasValue = 246;
  hh = 247;
  hour = 248;
  i = 249;
  in = 250;
  index = 251;
  init = 252;
  inout = 253;
  insert = 254;
  insertIntoSet = 255;
  Instead = 256;
  Int = 257;
  Int32 = 258;
  Int32Value = 259;
  Int64 = 260;
  Int64Value = 261;
  Int8 = 262;
  integerLiteral = 263;
  IntegerLiteralType = 264;
  intern = 265;
  Internal = 266;
  InternalState = 267;
  is = 268;
  isA = 269;
  isEqual = 270;
  isEqualTo = 271;
  isInitialized = 272;
  it = 273;
  Iterator = 274;
  i_2166136261 = 275;
  json = 276;
  JSONDecoder = 277;
  jsonEncoder = 278;
  JSONEncodingVisitor = 279;
  JSONMapEncodingVisitor = 280;
  jsonName = 281;
  jsonPath = 282;
  jsonPaths = 283;
  JSONScanner = 284;
  jsonString = 285;
  jsonText = 286;
  JSONToProto = 287;
  jsonUTF8Data = 288;
  julianDayNumberFromSecondsSince1970 = 289;
  k = 290;
  Key = 291;
  keyField = 292;
  KeyType = 293;
  kind = 294;
  knownTypes = 295;
  l = 296;
  label = 297;
  length = 298;
  let = 299;
  lhs = 300;
  listOfMessages = 301;
  listValue = 302;
  littleEndian = 303;
  littleEndianBytes = 304;
  M = 305;
  major = 306;
  makeIterator = 307;
  mapHash = 308;
  mapNameResolver = 309;
  mapToMessages = 310;
  MapValueType = 311;
  mapVisitor = 312;
  mdayStart = 313;
  members = 314;
  merge = 315;
  message = 316;
  messageDepthLimit = 317;
  MessageExtension = 318;
  messageType = 319;
  Method = 320;
  methods = 321;
  minor = 322;
  Mixin = 323;
  mixins = 324;
  mm = 325;
  mod = 326;
  month = 327;
  mutating = 328;
  n = 329;
  name = 330;
  NameDescription = 331;
  NameMap = 332;
  nameResolver = 333;
  names = 334;
  nanos = 335;
  nativeBytes = 336;
  nativeEndianBytes = 337;
  newL = 338;
  newValue = 339;
  nextFieldNumber = 340;
  nil = 341;
  nilLiteral = 342;
  no = 343;
  normalizeForDuration = 344;
  normalizeForTimestamp = 345;
  nullValue = 346;
  number = 347;
  numberValue = 348;
  of = 349;
  oneofIndex = 350;
  oneofs = 351;
  OneOf_Kind = 352;
  only = 353;
  Option = 354;
  OptionalEnumExtensionField = 355;
  OptionalExtensionField = 356;
  OptionalGroupExtensionField = 357;
  OptionalMessageExtensionField = 358;
  options = 359;
  org = 360;
  other = 361;
  out = 362;
  output = 363;
  p = 364;
  packed = 365;
  PackedEnumExtensionField = 366;
  PackedExtensionField = 367;
  packedSize = 368;
  padding = 369;
  parent = 370;
  parseBareFloatString = 371;
  parseBareSInt = 372;
  parseBareUInt = 373;
  parseBytes = 374;
  parseDuration = 375;
  parseJSONFieldNames = 376;
  parseTimestamp = 377;
  partial = 378;
  pass = 379;
  path = 380;
  paths = 381;
  pointer = 382;
  pos = 383;
  prefix = 384;
  preTraverse = 385;
  private = 386;
  proto = 387;
  proto2 = 388;
  proto3DefaultValue = 389;
  protobuf = 390;
  ProtobufBool = 391;
  ProtobufBytes = 392;
  ProtobufDouble = 393;
  ProtobufEnumMap = 394;
  protobufExtension = 395;
  ProtobufFloat = 396;
  ProtobufInt32 = 397;
  ProtobufInt64 = 398;
  ProtobufMap = 399;
  ProtobufMessageMap = 400;
  ProtobufString = 401;
  ProtobufUInt32 = 402;
  ProtobufUInt64 = 403;
  protobuf_extensionFieldValues = 404;
  protobuf_fieldNumber = 405;
  protobuf_generated_isEqualTo = 406;
  protobuf_nameMap = 407;
  protobuf_newField = 408;
  protobuf_package = 409;
  protoFieldName = 410;
  protoMessageName = 411;
  protoPaths = 412;
  ProtoToJSON = 413;
  public = 414;
  putBoolValue = 415;
  putBytesValue = 416;
  putDoubleValue = 417;
  putEnumValue = 418;
  putFixedUInt32 = 419;
  putFixedUInt64 = 420;
  putFloatValue = 421;
  putInt64 = 422;
  putStringValue = 423;
  putUInt64 = 424;
  putUInt64Hex = 425;
  putVarInt = 426;
  putZigZagVarInt = 427;
  rawChars = 428;
  RawValue = 429;
  register = 430;
  RepeatedEnumExtensionField = 431;
  RepeatedExtensionField = 432;
  RepeatedGroupExtensionField = 433;
  RepeatedMessageExtensionField = 434;
  requestStreaming = 435;
  requestTypeURL = 436;
  requiredSize = 437;
  responseStreaming = 438;
  responseTypeURL = 439;
  result = 440;
  return = 441;
  revision = 442;
  rhs = 443;
  root = 444;
  s = 445;
  sawBackslash = 446;
  scanner = 447;
  seconds = 448;
  self = 449;
  separator = 450;
  serializeAnyJSON = 451;
  serializedData = 452;
  serializedSize = 453;
  serialQueue = 454;
  set = 455;
  setExtensionValue = 456;
  shift = 457;
  SignedInteger = 458;
  SimpleExtensionMap = 459;
  sizer = 460;
  slowUtf8ToString = 461;
  source = 462;
  sourceContext = 463;
  split = 464;
  ss = 465;
  start = 466;
  startArray = 467;
  startField = 468;
  startIndex = 469;
  startMessageField = 470;
  startObject = 471;
  startRegularField = 472;
  state = 473;
  static = 474;
  StaticString = 475;
  storage = 476;
  StorageClass = 477;
  String = 478;
  stringLiteral = 479;
  StringLiteralType = 480;
  stringResult = 481;
  stringValue = 482;
  Struct = 483;
  structValue = 484;
  subDecoder = 485;
  subscript = 486;
  swift = 487;
  SwiftProtobuf = 488;
  syntax = 489;
  T = 490;
  tag = 491;
  terminator = 492;
  testDecoder = 493;
  text = 494;
  textDecoder = 495;
  TextFormatDecoder = 496;
  TextFormatEncoder = 497;
  TextFormatEncodingVisitor = 498;
  TextFormatScanner = 499;
  textFormatString = 500;
  that = 501;
  the = 502;
  there = 503;
  they = 504;
  through = 505;
  throws = 506;
  timeInterval = 507;
  timeIntervalSince1970 = 508;
  timeIntervalSinceReferenceDate = 509;
  timeOfDayFromSecondsSince1970 = 510;
  Timestamp = 511;
  toJsonFieldName = 512;
  total = 513;
  traverse = 514;
  true = 515;
  try = 516;
  type = 517;
  typealias = 518;
  typeName = 519;
  typePrefix = 520;
  typeRegistry = 521;
  typeStart = 522;
  typeUnknown = 523;
  typeURL = 524;
  UInt32 = 525;
  UInt32Value = 526;
  UInt64 = 527;
  UInt64Value = 528;
  UInt8 = 529;
  UnicodeScalar = 530;
  unicodeScalarLiteral = 531;
  UnicodeScalarLiteralType = 532;
  unicodeScalars = 533;
  UnicodeScalarView = 534;
  union = 535;
  uniqueStorage = 536;
  unknown = 537;
  unknownFields = 538;
  UnknownStorage = 539;
  unpack = 540;
  unpackTo = 541;
  UnsafeBufferPointer = 542;
  UnsafeMutablePointer = 543;
  UnsafeMutableRawBufferPointer = 544;
  UnsafePointer = 545;
  updatedOptions = 546;
  url = 547;
  used = 548;
  utf8 = 549;
  utf8Buffer = 550;
  utf8Codec = 551;
  utf8ToDouble = 552;
  utf8ToString = 553;
  UTF8View = 554;
  v = 555;
  value = 556;
  valueField = 557;
  values = 558;
  ValueType = 559;
  var = 560;
  version = 561;
  versionString = 562;
  visitExtensionFields = 563;
  visitMapField = 564;
  visitor = 565;
  visitPacked = 566;
  visitPackedBoolField = 567;
  visitPackedDoubleField = 568;
  visitPackedEnumField = 569;
  visitPackedFixed32Field = 570;
  visitPackedFixed64Field = 571;
  visitPackedFloatField = 572;
  visitPackedInt32Field = 573;
  visitPackedInt64Field = 574;
  visitPackedSFixed32Field = 575;
  visitPackedSFixed64Field = 576;
  visitPackedSInt32Field = 577;
  visitPackedSInt64Field = 578;
  visitPackedUInt32Field = 579;
  visitPackedUInt64Field = 580;
  visitRepeated = 581;
  visitRepeatedBoolField = 582;
  visitRepeatedBytesField = 583;
  visitRepeatedDoubleField = 584;
  visitRepeatedEnumField = 585;
  visitRepeatedFixed32Field = 586;
  visitRepeatedFixed64Field = 587;
  visitRepeatedFloatField = 588;
  visitRepeatedGroupField = 589;
  visitRepeatedInt32Field = 590;
  visitRepeatedInt64Field = 591;
  visitRepeatedMessageField = 592;
  visitRepeatedSFixed32Field = 593;
  visitRepeatedSFixed64Field = 594;
  visitRepeatedSInt32Field = 595;
  visitRepeatedSInt64Field = 596;
  visitRepeatedStringField = 597;
  visitRepeatedUInt32Field = 598;
  visitRepeatedUInt64Field = 599;
  visitSingular = 600;
  visitSingularBoolField = 601;
  visitSingularBytesField = 602;
  visitSingularDoubleField = 603;
  visitSingularEnumField = 604;
  visitSingularFixed32Field = 605;
  visitSingularFixed64Field = 606;
  visitSingularFloatField = 607;
  visitSingularGroupField = 608;
  visitSingularInt32Field = 609;
  visitSingularInt64Field = 610;
  visitSingularMessageField = 611;
  visitSingularSFixed32Field = 612;
  visitSingularSFixed64Field = 613;
  visitSingularSInt32Field = 614;
  visitSingularSInt64Field = 615;
  visitSingularStringField = 616;
  visitSingularUInt32Field = 617;
  visitSingularUInt64Field = 618;
  visitUnknown = 619;
  where = 620;
  wireFormat = 621;
  with = 622;
  WrappedType = 623;
  wrapped_vsnprintf = 624;
  yday = 625;
  YY = 626;
}
