// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package protobuf_unittest;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  adjusted = 1;
  any = 2;
  AnyExtensionField = 3;
  AnyMessageExtension = 4;
  AnyMessageStorage = 5;
  AnyUnpackError = 6;
  Api = 7;
  appended = 8;
  appendUIntHex = 9;
  appendUnknown = 10;
  areAllInitialized = 11;
  array = 12;
  arrayLiteral = 13;
  arraySeparator = 14;
  as = 15;
  asciiOpenCurlyBracket = 16;
  asciiZero = 17;
  available = 18;
  b = 19;
  BaseType = 20;
  binary = 21;
  BinaryDecoder = 22;
  BinaryDecodingError = 23;
  BinaryDecodingOptions = 24;
  BinaryEncoder = 25;
  BinaryEncodingError = 26;
  BinaryEncodingSizeVisitor = 27;
  BinaryEncodingVisitor = 28;
  bodySize = 29;
  Bool = 30;
  booleanLiteral = 31;
  BooleanLiteralType = 32;
  boolValue = 33;
  buffer = 34;
  bytes = 35;
  bytesInGroup = 36;
  BytesValue = 37;
  c = 38;
  capitalizeNext = 39;
  cardinality = 40;
  Character = 41;
  characters = 42;
  chars = 43;
  class = 44;
  clearExtensionValue = 45;
  clearSourceContext = 46;
  clearValue = 47;
  Collection = 48;
  contentsOf = 49;
  count = 50;
  customCodable = 51;
  CustomDebugStringConvertible = 52;
  d = 53;
  Data = 54;
  dataPointer = 55;
  dataResult = 56;
  dataSize = 57;
  date = 58;
  daySec = 59;
  daysSinceEpoch = 60;
  debugDescription = 61;
  decoded = 62;
  decodedFromJSONNull = 63;
  decodeExtensionField = 64;
  decodeJSON = 65;
  decodeMapField = 66;
  decodeMessage = 67;
  decoder = 68;
  decodeRepeated = 69;
  decodeRepeatedBoolField = 70;
  decodeRepeatedBytesField = 71;
  decodeRepeatedDoubleField = 72;
  decodeRepeatedEnumField = 73;
  decodeRepeatedFixed32Field = 74;
  decodeRepeatedFixed64Field = 75;
  decodeRepeatedFloatField = 76;
  decodeRepeatedGroupField = 77;
  decodeRepeatedInt32Field = 78;
  decodeRepeatedInt64Field = 79;
  decodeRepeatedMessageField = 80;
  decodeRepeatedSFixed32Field = 81;
  decodeRepeatedSFixed64Field = 82;
  decodeRepeatedSInt32Field = 83;
  decodeRepeatedSInt64Field = 84;
  decodeRepeatedStringField = 85;
  decodeRepeatedUInt32Field = 86;
  decodeRepeatedUInt64Field = 87;
  decodeSingular = 88;
  decodeSingularBoolField = 89;
  decodeSingularBytesField = 90;
  decodeSingularDoubleField = 91;
  decodeSingularEnumField = 92;
  decodeSingularFixed32Field = 93;
  decodeSingularFixed64Field = 94;
  decodeSingularFloatField = 95;
  decodeSingularGroupField = 96;
  decodeSingularInt32Field = 97;
  decodeSingularInt64Field = 98;
  decodeSingularMessageField = 99;
  decodeSingularSFixed32Field = 100;
  decodeSingularSFixed64Field = 101;
  decodeSingularSInt32Field = 102;
  decodeSingularSInt64Field = 103;
  decodeSingularStringField = 104;
  decodeSingularUInt32Field = 105;
  decodeSingularUInt64Field = 106;
  decodeTextFormat = 107;
  defaultValue = 108;
  description = 109;
  Dictionary = 110;
  dictionaryLiteral = 111;
  digit = 112;
  digit0 = 113;
  digit1 = 114;
  digitCount = 115;
  digits = 116;
  digitValue = 117;
  discardableResult = 118;
  discardUnknownFields = 119;
  double = 120;
  doubleToUtf8 = 121;
  DoubleValue = 122;
  Duration = 123;
  E = 124;
  Element = 125;
  elements = 126;
  emitExtensionFieldName = 127;
  emitFieldName = 128;
  emitFieldNumber = 129;
  Empty = 130;
  emptyData = 131;
  encoded = 132;
  encodedJSONString = 133;
  encodedSize = 134;
  encodeField = 135;
  encoder = 136;
  end = 137;
  endArray = 138;
  endMessageField = 139;
  endObject = 140;
  endRegularField = 141;
  enum = 142;
  enumvalue = 143;
  Equatable = 144;
  Error = 145;
  ExpressibleByArrayLiteral = 146;
  ExpressibleByDictionaryLiteral = 147;
  ext = 148;
  extendedGraphemeClusterLiteral = 149;
  ExtendedGraphemeClusterLiteralType = 150;
  ExtensibleMessage = 151;
  extension = 152;
  ExtensionField = 153;
  ExtensionFieldValueSet = 154;
  ExtensionMap = 155;
  extensions = 156;
  extras = 157;
  f = 158;
  false = 159;
  field = 160;
  FieldMask = 161;
  fieldName = 162;
  fieldNameCount = 163;
  fieldNum = 164;
  fieldNumber = 165;
  fieldNumberForProto = 166;
  fields = 167;
  fieldSize = 168;
  FieldTag = 169;
  fieldType = 170;
  fieldValue = 171;
  fileName = 172;
  firstItem = 173;
  flatMap = 174;
  float = 175;
  floatLiteral = 176;
  FloatLiteralType = 177;
  floatToUtf8 = 178;
  FloatValue = 179;
  forMessageName = 180;
  forReadingFrom = 181;
  forTypeURL = 182;
  forWritingInto = 183;
  from = 184;
  fromAscii2 = 185;
  fromAscii4 = 186;
  fromHexDigit = 187;
  func = 188;
  G = 189;
  get = 190;
  getExtensionValue = 191;
  Google_Protobuf_Any = 192;
  Google_Protobuf_Api = 193;
  Google_Protobuf_BoolValue = 194;
  Google_Protobuf_BytesValue = 195;
  Google_Protobuf_DoubleValue = 196;
  Google_Protobuf_Duration = 197;
  Google_Protobuf_Empty = 198;
  Google_Protobuf_Enum = 199;
  Google_Protobuf_EnumValue = 200;
  Google_Protobuf_Field = 201;
  Google_Protobuf_FieldMask = 202;
  Google_Protobuf_FloatValue = 203;
  Google_Protobuf_Int32Value = 204;
  Google_Protobuf_Int64Value = 205;
  Google_Protobuf_ListValue = 206;
  Google_Protobuf_Method = 207;
  Google_Protobuf_Mixin = 208;
  Google_Protobuf_NullValue = 209;
  Google_Protobuf_Option = 210;
  Google_Protobuf_SourceContext = 211;
  Google_Protobuf_StringValue = 212;
  Google_Protobuf_Struct = 213;
  Google_Protobuf_Syntax = 214;
  Google_Protobuf_Timestamp = 215;
  Google_Protobuf_Type = 216;
  Google_Protobuf_UInt32Value = 217;
  Google_Protobuf_UInt64Value = 218;
  Google_Protobuf_Value = 219;
  group = 220;
  h = 221;
  handleConflictingOneOf = 222;
  hasExtensionValue = 223;
  hash = 224;
  Hashable = 225;
  hashValue = 226;
  HashVisitor = 227;
  hasSourceContext = 228;
  hasValue = 229;
  hour = 230;
  i = 231;
  index = 232;
  init = 233;
  inout = 234;
  insert = 235;
  Int = 236;
  Int32 = 237;
  Int32Value = 238;
  Int64 = 239;
  Int64Value = 240;
  Int8 = 241;
  integerLiteral = 242;
  IntegerLiteralType = 243;
  intern = 244;
  Internal = 245;
  InternalState = 246;
  isA = 247;
  isEqual = 248;
  isEqualTo = 249;
  isInitialized = 250;
  it = 251;
  Iterator = 252;
  i_2166136261 = 253;
  JSONDecoder = 254;
  JSONDecodingError = 255;
  JSONDecodingOptions = 256;
  jsonEncoder = 257;
  JSONEncodingError = 258;
  JSONEncodingVisitor = 259;
  JSONMapEncodingVisitor = 260;
  jsonName = 261;
  jsonPath = 262;
  jsonPaths = 263;
  JSONScanner = 264;
  jsonString = 265;
  jsonText = 266;
  jsonUTF8Data = 267;
  k = 268;
  Key = 269;
  keyField = 270;
  KeyType = 271;
  kind = 272;
  l = 273;
  length = 274;
  let = 275;
  lhs = 276;
  listOfMessages = 277;
  listValue = 278;
  littleEndian = 279;
  littleEndianBytes = 280;
  M = 281;
  major = 282;
  makeIterator = 283;
  mapHash = 284;
  MapKeyType = 285;
  mapNameResolver = 286;
  mapToMessages = 287;
  MapValueType = 288;
  mapVisitor = 289;
  mdayStart = 290;
  merge = 291;
  message = 292;
  messageDepthLimit = 293;
  MessageExtension = 294;
  MessageImplementationBase = 295;
  messageType = 296;
  Method = 297;
  methods = 298;
  minor = 299;
  Mixin = 300;
  mixins = 301;
  month = 302;
  mutating = 303;
  n = 304;
  name = 305;
  NameDescription = 306;
  NameMap = 307;
  nameResolver = 308;
  names = 309;
  nanos = 310;
  nativeBytes = 311;
  nativeEndianBytes = 312;
  newL = 313;
  newValue = 314;
  nextFieldNumber = 315;
  nil = 316;
  nilLiteral = 317;
  nullValue = 318;
  number = 319;
  numberValue = 320;
  of = 321;
  oneofIndex = 322;
  oneofs = 323;
  OneOf_Kind = 324;
  Option = 325;
  OptionalEnumExtensionField = 326;
  OptionalExtensionField = 327;
  OptionalGroupExtensionField = 328;
  OptionalMessageExtensionField = 329;
  options = 330;
  other = 331;
  out = 332;
  output = 333;
  p = 334;
  packed = 335;
  PackedEnumExtensionField = 336;
  PackedExtensionField = 337;
  packedSize = 338;
  padding = 339;
  parent = 340;
  partial = 341;
  path = 342;
  paths = 343;
  pointer = 344;
  pos = 345;
  prefix = 346;
  preTraverse = 347;
  proto2 = 348;
  proto3DefaultValue = 349;
  ProtobufAPIVersionCheck = 350;
  ProtobufAPIVersion_2 = 351;
  ProtobufBool = 352;
  ProtobufBytes = 353;
  ProtobufDouble = 354;
  ProtobufEnumMap = 355;
  protobufExtension = 356;
  ProtobufFixed32 = 357;
  ProtobufFixed64 = 358;
  ProtobufFloat = 359;
  ProtobufInt32 = 360;
  ProtobufInt64 = 361;
  ProtobufMap = 362;
  ProtobufMessageMap = 363;
  ProtobufSFixed32 = 364;
  ProtobufSFixed64 = 365;
  ProtobufSInt32 = 366;
  ProtobufSInt64 = 367;
  ProtobufString = 368;
  ProtobufUInt32 = 369;
  ProtobufUInt64 = 370;
  protobuf_extensionFieldValues = 371;
  protobuf_fieldNumber = 372;
  protobuf_generated_isEqualTo = 373;
  protobuf_nameMap = 374;
  protobuf_newField = 375;
  protobuf_package = 376;
  protocol = 377;
  protoFieldName = 378;
  protoMessageName = 379;
  ProtoNameProviding = 380;
  protoPaths = 381;
  public = 382;
  putBoolValue = 383;
  putBytesValue = 384;
  putDoubleValue = 385;
  putEnumValue = 386;
  putFixedUInt32 = 387;
  putFixedUInt64 = 388;
  putFloatValue = 389;
  putInt64 = 390;
  putStringValue = 391;
  putUInt64 = 392;
  putUInt64Hex = 393;
  putVarInt = 394;
  putZigZagVarInt = 395;
  rawChars = 396;
  RawRepresentable = 397;
  RawValue = 398;
  register = 399;
  RepeatedEnumExtensionField = 400;
  RepeatedExtensionField = 401;
  RepeatedGroupExtensionField = 402;
  RepeatedMessageExtensionField = 403;
  requestStreaming = 404;
  requestTypeURL = 405;
  requiredSize = 406;
  responseStreaming = 407;
  responseTypeURL = 408;
  result = 409;
  return = 410;
  revision = 411;
  rhs = 412;
  root = 413;
  s = 414;
  sawBackslash = 415;
  scanner = 416;
  seconds = 417;
  self = 418;
  separator = 419;
  serializedData = 420;
  serializedSize = 421;
  set = 422;
  setExtensionValue = 423;
  shift = 424;
  SimpleExtensionMap = 425;
  sizer = 426;
  source = 427;
  sourceContext = 428;
  split = 429;
  start = 430;
  startArray = 431;
  startField = 432;
  startIndex = 433;
  startMessageField = 434;
  startObject = 435;
  startRegularField = 436;
  state = 437;
  static = 438;
  StaticString = 439;
  storage = 440;
  String = 441;
  stringLiteral = 442;
  StringLiteralType = 443;
  stringResult = 444;
  stringValue = 445;
  struct = 446;
  structValue = 447;
  subDecoder = 448;
  subscript = 449;
  SwiftProtobuf = 450;
  syntax = 451;
  T = 452;
  tag = 453;
  terminator = 454;
  testDecoder = 455;
  text = 456;
  textDecoder = 457;
  TextFormatDecoder = 458;
  TextFormatDecodingError = 459;
  TextFormatEncodingVisitor = 460;
  textFormatString = 461;
  throws = 462;
  timeInterval = 463;
  timeIntervalSince1970 = 464;
  timeIntervalSinceReferenceDate = 465;
  Timestamp = 466;
  total = 467;
  traverse = 468;
  true = 469;
  try = 470;
  type = 471;
  typealias = 472;
  typePrefix = 473;
  typeStart = 474;
  typeUnknown = 475;
  typeURL = 476;
  UInt32 = 477;
  UInt32Value = 478;
  UInt64 = 479;
  UInt64Value = 480;
  UInt8 = 481;
  unicodeScalarLiteral = 482;
  UnicodeScalarLiteralType = 483;
  unicodeScalars = 484;
  UnicodeScalarView = 485;
  union = 486;
  unknown = 487;
  unknownFields = 488;
  UnknownStorage = 489;
  unpackTo = 490;
  UnsafeBufferPointer = 491;
  UnsafeMutablePointer = 492;
  UnsafePointer = 493;
  updatedOptions = 494;
  url = 495;
  utf8 = 496;
  utf8Codec = 497;
  utf8ToDouble = 498;
  UTF8View = 499;
  v = 500;
  value = 501;
  valueField = 502;
  values = 503;
  ValueType = 504;
  var = 505;
  Version = 506;
  versionString = 507;
  visitExtensionFields = 508;
  visitMapField = 509;
  visitor = 510;
  visitPacked = 511;
  visitPackedBoolField = 512;
  visitPackedDoubleField = 513;
  visitPackedEnumField = 514;
  visitPackedFixed32Field = 515;
  visitPackedFixed64Field = 516;
  visitPackedFloatField = 517;
  visitPackedInt32Field = 518;
  visitPackedInt64Field = 519;
  visitPackedSFixed32Field = 520;
  visitPackedSFixed64Field = 521;
  visitPackedSInt32Field = 522;
  visitPackedSInt64Field = 523;
  visitPackedUInt32Field = 524;
  visitPackedUInt64Field = 525;
  visitRepeated = 526;
  visitRepeatedBoolField = 527;
  visitRepeatedBytesField = 528;
  visitRepeatedDoubleField = 529;
  visitRepeatedEnumField = 530;
  visitRepeatedFixed32Field = 531;
  visitRepeatedFixed64Field = 532;
  visitRepeatedFloatField = 533;
  visitRepeatedGroupField = 534;
  visitRepeatedInt32Field = 535;
  visitRepeatedInt64Field = 536;
  visitRepeatedMessageField = 537;
  visitRepeatedSFixed32Field = 538;
  visitRepeatedSFixed64Field = 539;
  visitRepeatedSInt32Field = 540;
  visitRepeatedSInt64Field = 541;
  visitRepeatedStringField = 542;
  visitRepeatedUInt32Field = 543;
  visitRepeatedUInt64Field = 544;
  visitSingular = 545;
  visitSingularBoolField = 546;
  visitSingularBytesField = 547;
  visitSingularDoubleField = 548;
  visitSingularEnumField = 549;
  visitSingularFixed32Field = 550;
  visitSingularFixed64Field = 551;
  visitSingularFloatField = 552;
  visitSingularGroupField = 553;
  visitSingularInt32Field = 554;
  visitSingularInt64Field = 555;
  visitSingularMessageField = 556;
  visitSingularSFixed32Field = 557;
  visitSingularSFixed64Field = 558;
  visitSingularSInt32Field = 559;
  visitSingularSInt64Field = 560;
  visitSingularStringField = 561;
  visitSingularUInt32Field = 562;
  visitSingularUInt64Field = 563;
  visitUnknown = 564;
  where = 565;
  wireFormat = 566;
  with = 567;
  WrappedType = 568;
  yday = 569;
}
