// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package protobuf_unittest;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  a = 1;
  adjusted = 2;
  any = 3;
  AnyExtensionField = 4;
  AnyMessageStorage = 5;
  Api = 6;
  appended = 7;
  appendUIntHex = 8;
  appendUnknown = 9;
  apple = 10;
  are = 11;
  areAllInitialized = 12;
  array = 13;
  arrayLiteral = 14;
  arraySeparator = 15;
  as = 16;
  asciiOpenCurlyBracket = 17;
  asciiZero = 18;
  asJSONObject = 19;
  available = 20;
  b = 21;
  base64String = 22;
  BaseType = 23;
  because = 24;
  binary = 25;
  BinaryDecoder = 26;
  BinaryEncoder = 27;
  BinaryEncodingSizeVisitor = 28;
  BinaryEncodingVisitor = 29;
  bits = 30;
  body = 31;
  bodySize = 32;
  Bool = 33;
  booleanLiteral = 34;
  BooleanLiteralType = 35;
  boolValue = 36;
  buffer = 37;
  buildTypeURL = 38;
  by = 39;
  bytes = 40;
  BytesValue = 41;
  c = 42;
  capitalizeNext = 43;
  cardinality = 44;
  Character = 45;
  characters = 46;
  chars = 47;
  clearExtensionValue = 48;
  clearSourceContext = 49;
  clearValue = 50;
  Collection = 51;
  com = 52;
  consume = 53;
  contentJSON = 54;
  contentsOf = 55;
  count = 56;
  customCodable = 57;
  d = 58;
  Data = 59;
  dataResult = 60;
  dataSize = 61;
  date = 62;
  daySec = 63;
  daysSinceEpoch = 64;
  DD = 65;
  debugDescription = 66;
  decodeBytes = 67;
  decoded = 68;
  decodedFromJSONNull = 69;
  decodeExtensionField = 70;
  decodeJSON = 71;
  decodeMapField = 72;
  decodeMessage = 73;
  decoder = 74;
  decodeRepeated = 75;
  decodeRepeatedBoolField = 76;
  decodeRepeatedBytesField = 77;
  decodeRepeatedDoubleField = 78;
  decodeRepeatedEnumField = 79;
  decodeRepeatedFixed32Field = 80;
  decodeRepeatedFixed64Field = 81;
  decodeRepeatedFloatField = 82;
  decodeRepeatedGroupField = 83;
  decodeRepeatedInt32Field = 84;
  decodeRepeatedInt64Field = 85;
  decodeRepeatedMessageField = 86;
  decodeRepeatedSFixed32Field = 87;
  decodeRepeatedSFixed64Field = 88;
  decodeRepeatedSInt32Field = 89;
  decodeRepeatedSInt64Field = 90;
  decodeRepeatedStringField = 91;
  decodeRepeatedUInt32Field = 92;
  decodeRepeatedUInt64Field = 93;
  decodeSingular = 94;
  decodeSingularBoolField = 95;
  decodeSingularBytesField = 96;
  decodeSingularDoubleField = 97;
  decodeSingularEnumField = 98;
  decodeSingularFixed32Field = 99;
  decodeSingularFixed64Field = 100;
  decodeSingularFloatField = 101;
  decodeSingularGroupField = 102;
  decodeSingularInt32Field = 103;
  decodeSingularInt64Field = 104;
  decodeSingularMessageField = 105;
  decodeSingularSFixed32Field = 106;
  decodeSingularSFixed64Field = 107;
  decodeSingularSInt32Field = 108;
  decodeSingularSInt64Field = 109;
  decodeSingularStringField = 110;
  decodeSingularUInt32Field = 111;
  decodeSingularUInt64Field = 112;
  decodeString = 113;
  decodeTextFormat = 114;
  defaultValue = 115;
  description = 116;
  destination = 117;
  Dictionary = 118;
  dictionaryLiteral = 119;
  digit0 = 120;
  digit1 = 121;
  digitCount = 122;
  digits = 123;
  digitValue = 124;
  discardableResult = 125;
  DispatchQueue = 126;
  div = 127;
  double = 128;
  doubleToUtf8 = 129;
  DoubleValue = 130;
  Duration = 131;
  E = 132;
  Element = 133;
  elements = 134;
  emitExtensionFieldName = 135;
  emitFieldName = 136;
  emitFieldNumber = 137;
  emitVerboseTextForm = 138;
  Empty = 139;
  emptyData = 140;
  encoded = 141;
  encodedJSONString = 142;
  encodedSize = 143;
  encodeField = 144;
  encoder = 145;
  end = 146;
  endArray = 147;
  endMessageField = 148;
  endObject = 149;
  endRegularField = 150;
  Enum = 151;
  enumvalue = 152;
  Equatable = 153;
  ext = 154;
  extendedGraphemeClusterLiteral = 155;
  ExtendedGraphemeClusterLiteralType = 156;
  ExtensionFieldValueSet = 157;
  ExtensionMap = 158;
  extensions = 159;
  extras = 160;
  f = 161;
  false = 162;
  fastUtf8ToString = 163;
  field = 164;
  FieldMask = 165;
  fieldName = 166;
  fieldNameCount = 167;
  fieldNumber = 168;
  fieldNumberForProto = 169;
  fields = 170;
  fieldSize = 171;
  FieldTag = 172;
  fieldType = 173;
  fieldValue = 174;
  fileName = 175;
  fileprivate = 176;
  firstItem = 177;
  flatMap = 178;
  float = 179;
  floatLiteral = 180;
  FloatLiteralType = 181;
  floatToUtf8 = 182;
  FloatValue = 183;
  for = 184;
  formatDuration = 185;
  formatTimestamp = 186;
  forMessage = 187;
  forMessageName = 188;
  forReadingFrom = 189;
  forTypeURL = 190;
  forWritingInto = 191;
  from = 192;
  fromAscii2 = 193;
  fromAscii4 = 194;
  fromHexDigit = 195;
  fromJSONString = 196;
  fromJSONUTF8Data = 197;
  fromMessage = 198;
  fromURL = 199;
  func = 200;
  Functions = 201;
  G = 202;
  generated = 203;
  get = 204;
  getExtensionValue = 205;
  Google_Protobuf_Any = 206;
  Google_Protobuf_Api = 207;
  Google_Protobuf_BoolValue = 208;
  Google_Protobuf_BytesValue = 209;
  Google_Protobuf_DoubleValue = 210;
  Google_Protobuf_Duration = 211;
  Google_Protobuf_Empty = 212;
  Google_Protobuf_Enum = 213;
  Google_Protobuf_EnumValue = 214;
  Google_Protobuf_Field = 215;
  Google_Protobuf_FieldMask = 216;
  Google_Protobuf_FloatValue = 217;
  Google_Protobuf_Int32Value = 218;
  Google_Protobuf_Int64Value = 219;
  Google_Protobuf_ListValue = 220;
  Google_Protobuf_Method = 221;
  Google_Protobuf_Mixin = 222;
  Google_Protobuf_NullValue = 223;
  Google_Protobuf_Option = 224;
  Google_Protobuf_SourceContext = 225;
  Google_Protobuf_StringValue = 226;
  Google_Protobuf_Struct = 227;
  Google_Protobuf_Syntax = 228;
  Google_Protobuf_Timestamp = 229;
  Google_Protobuf_Type = 230;
  Google_Protobuf_UInt32Value = 231;
  Google_Protobuf_UInt64Value = 232;
  Google_Protobuf_Value = 233;
  gregorianDateFromSecondsSince1970 = 234;
  group = 235;
  h = 236;
  handleConflictingOneOf = 237;
  has = 238;
  hasExtensionValue = 239;
  hash = 240;
  Hashable = 241;
  hashValue = 242;
  HashVisitor = 243;
  hasSourceContext = 244;
  hasValue = 245;
  hh = 246;
  hour = 247;
  i = 248;
  index = 249;
  init = 250;
  inout = 251;
  insert = 252;
  insertIntoSet = 253;
  Int = 254;
  Int32 = 255;
  Int32Value = 256;
  Int64 = 257;
  Int64Value = 258;
  Int8 = 259;
  integerLiteral = 260;
  IntegerLiteralType = 261;
  intern = 262;
  Internal = 263;
  InternalState = 264;
  isA = 265;
  isEqual = 266;
  isEqualTo = 267;
  isInitialized = 268;
  it = 269;
  Iterator = 270;
  i_2166136261 = 271;
  json = 272;
  JSONDecoder = 273;
  jsonEncoder = 274;
  JSONEncodingVisitor = 275;
  JSONMapEncodingVisitor = 276;
  jsonName = 277;
  jsonPath = 278;
  jsonPaths = 279;
  JSONScanner = 280;
  jsonString = 281;
  jsonText = 282;
  JSONToProto = 283;
  jsonUTF8Data = 284;
  julianDayNumberFromSecondsSince1970 = 285;
  k = 286;
  Key = 287;
  keyField = 288;
  KeyType = 289;
  kind = 290;
  knownTypes = 291;
  l = 292;
  label = 293;
  length = 294;
  let = 295;
  lhs = 296;
  listOfMessages = 297;
  listValue = 298;
  littleEndian = 299;
  littleEndianBytes = 300;
  M = 301;
  major = 302;
  makeIterator = 303;
  mapHash = 304;
  mapNameResolver = 305;
  mapToMessages = 306;
  MapValueType = 307;
  mapVisitor = 308;
  mdayStart = 309;
  members = 310;
  merge = 311;
  message = 312;
  MessageExtension = 313;
  MessageExtensionBase = 314;
  messageType = 315;
  Method = 316;
  methods = 317;
  minor = 318;
  Mixin = 319;
  mixins = 320;
  mm = 321;
  mod = 322;
  month = 323;
  mutating = 324;
  n = 325;
  name = 326;
  NameDescription = 327;
  NameMap = 328;
  nameResolver = 329;
  names = 330;
  nanos = 331;
  nativeBytes = 332;
  nativeEndianBytes = 333;
  newL = 334;
  newValue = 335;
  nextFieldNumber = 336;
  nil = 337;
  nilLiteral = 338;
  no = 339;
  normalizeForDuration = 340;
  normalizeForTimestamp = 341;
  nullValue = 342;
  number = 343;
  numberValue = 344;
  of = 345;
  oneofIndex = 346;
  oneofs = 347;
  OneOf_Kind = 348;
  only = 349;
  Option = 350;
  OptionalEnumExtensionField = 351;
  OptionalExtensionField = 352;
  OptionalGroupExtensionField = 353;
  OptionalMessageExtensionField = 354;
  options = 355;
  other = 356;
  out = 357;
  output = 358;
  p = 359;
  packed = 360;
  PackedEnumExtensionField = 361;
  PackedExtensionField = 362;
  packedSize = 363;
  parseBareFloatString = 364;
  parseBareSInt = 365;
  parseBareUInt = 366;
  parseDuration = 367;
  parseJSONFieldNames = 368;
  parseTimestamp = 369;
  partial = 370;
  path = 371;
  paths = 372;
  pointer = 373;
  pos = 374;
  prefix = 375;
  preTraverse = 376;
  private = 377;
  proto = 378;
  proto2 = 379;
  proto3DefaultValue = 380;
  ProtobufBool = 381;
  ProtobufBytes = 382;
  ProtobufDouble = 383;
  ProtobufEnumMap = 384;
  protobufExtension = 385;
  ProtobufFloat = 386;
  ProtobufInt32 = 387;
  ProtobufInt64 = 388;
  ProtobufMap = 389;
  ProtobufMessageMap = 390;
  ProtobufString = 391;
  ProtobufUInt32 = 392;
  ProtobufUInt64 = 393;
  protobuf_extensionFieldValues = 394;
  protobuf_fieldNumber = 395;
  protobuf_generated_isEqualTo = 396;
  protobuf_nameMap = 397;
  protobuf_newField = 398;
  protobuf_package = 399;
  protobuf_set = 400;
  protoFieldName = 401;
  protoMessageName = 402;
  protoPaths = 403;
  ProtoToJSON = 404;
  public = 405;
  putBoolValue = 406;
  putBytesValue = 407;
  putDoubleValue = 408;
  putEnumValue = 409;
  putFixedUInt32 = 410;
  putFixedUInt64 = 411;
  putFloatValue = 412;
  putInt64 = 413;
  putStringValue = 414;
  putUInt64 = 415;
  putUInt64Hex = 416;
  putVarInt = 417;
  putZigZagVarInt = 418;
  RawValue = 419;
  register = 420;
  RepeatedEnumExtensionField = 421;
  RepeatedExtensionField = 422;
  RepeatedGroupExtensionField = 423;
  RepeatedMessageExtensionField = 424;
  requestStreaming = 425;
  requestTypeURL = 426;
  requiredSize = 427;
  responseStreaming = 428;
  responseTypeURL = 429;
  result = 430;
  return = 431;
  revision = 432;
  rhs = 433;
  root = 434;
  s = 435;
  savedPosition = 436;
  sawBackslash = 437;
  scanner = 438;
  seconds = 439;
  self = 440;
  separator = 441;
  serializeAnyJSON = 442;
  serializedData = 443;
  serializedSize = 444;
  serialQueue = 445;
  set = 446;
  setExtensionValue = 447;
  shift = 448;
  SignedInteger = 449;
  SimpleExtensionMap = 450;
  sizer = 451;
  slowUtf8ToString = 452;
  source = 453;
  sourceContext = 454;
  split = 455;
  ss = 456;
  start = 457;
  startArray = 458;
  startField = 459;
  startIndex = 460;
  startMessageField = 461;
  startObject = 462;
  startRegularField = 463;
  state = 464;
  static = 465;
  StaticString = 466;
  storage = 467;
  StorageClass = 468;
  String = 469;
  stringLiteral = 470;
  StringLiteralType = 471;
  stringResult = 472;
  stringValue = 473;
  Struct = 474;
  structValue = 475;
  subDecoder = 476;
  subscript = 477;
  swift = 478;
  SwiftProtobuf = 479;
  syntax = 480;
  T = 481;
  tag = 482;
  target = 483;
  terminator = 484;
  testDecoder = 485;
  text = 486;
  textDecoder = 487;
  TextFormatDecoder = 488;
  TextFormatEncoder = 489;
  TextFormatEncodingVisitor = 490;
  TextFormatScanner = 491;
  textFormatString = 492;
  that = 493;
  they = 494;
  throws = 495;
  timeInterval = 496;
  timeIntervalSince1970 = 497;
  timeIntervalSinceReferenceDate = 498;
  timeOfDayFromSecondsSince1970 = 499;
  Timestamp = 500;
  toJsonFieldName = 501;
  total = 502;
  traverse = 503;
  true = 504;
  try = 505;
  Type = 506;
  typealias = 507;
  typeName = 508;
  typePrefix = 509;
  typeRegistry = 510;
  typeStart = 511;
  typeUnknown = 512;
  typeURL = 513;
  UInt32 = 514;
  UInt32Value = 515;
  UInt64 = 516;
  UInt64Value = 517;
  UInt8 = 518;
  UnicodeScalar = 519;
  unicodeScalarLiteral = 520;
  UnicodeScalarLiteralType = 521;
  unicodeScalars = 522;
  UnicodeScalarView = 523;
  union = 524;
  uniqueStorage = 525;
  unknown = 526;
  unknownData = 527;
  unknownFields = 528;
  UnknownStorage = 529;
  unpack = 530;
  unpackTo = 531;
  UnsafeBufferPointer = 532;
  UnsafeMutablePointer = 533;
  UnsafeMutableRawBufferPointer = 534;
  UnsafePointer = 535;
  url = 536;
  used = 537;
  utf8 = 538;
  utf8Buffer = 539;
  utf8Codec = 540;
  utf8ToDouble = 541;
  utf8ToString = 542;
  UTF8View = 543;
  v = 544;
  value = 545;
  valueField = 546;
  values = 547;
  ValueType = 548;
  var = 549;
  version = 550;
  versionString = 551;
  visitExtensionFields = 552;
  visitMapField = 553;
  visitor = 554;
  visitPacked = 555;
  visitPackedBoolField = 556;
  visitPackedDoubleField = 557;
  visitPackedEnumField = 558;
  visitPackedFixed32Field = 559;
  visitPackedFixed64Field = 560;
  visitPackedFloatField = 561;
  visitPackedInt32Field = 562;
  visitPackedInt64Field = 563;
  visitPackedSFixed32Field = 564;
  visitPackedSFixed64Field = 565;
  visitPackedSInt32Field = 566;
  visitPackedSInt64Field = 567;
  visitPackedUInt32Field = 568;
  visitPackedUInt64Field = 569;
  visitRepeated = 570;
  visitRepeatedBoolField = 571;
  visitRepeatedBytesField = 572;
  visitRepeatedDoubleField = 573;
  visitRepeatedEnumField = 574;
  visitRepeatedFixed32Field = 575;
  visitRepeatedFixed64Field = 576;
  visitRepeatedFloatField = 577;
  visitRepeatedGroupField = 578;
  visitRepeatedInt32Field = 579;
  visitRepeatedInt64Field = 580;
  visitRepeatedMessageField = 581;
  visitRepeatedSFixed32Field = 582;
  visitRepeatedSFixed64Field = 583;
  visitRepeatedSInt32Field = 584;
  visitRepeatedSInt64Field = 585;
  visitRepeatedStringField = 586;
  visitRepeatedUInt32Field = 587;
  visitRepeatedUInt64Field = 588;
  visitSingular = 589;
  visitSingularBoolField = 590;
  visitSingularBytesField = 591;
  visitSingularDoubleField = 592;
  visitSingularEnumField = 593;
  visitSingularFixed32Field = 594;
  visitSingularFixed64Field = 595;
  visitSingularFloatField = 596;
  visitSingularGroupField = 597;
  visitSingularInt32Field = 598;
  visitSingularInt64Field = 599;
  visitSingularMessageField = 600;
  visitSingularSFixed32Field = 601;
  visitSingularSFixed64Field = 602;
  visitSingularSInt32Field = 603;
  visitSingularSInt64Field = 604;
  visitSingularStringField = 605;
  visitSingularUInt32Field = 606;
  visitSingularUInt64Field = 607;
  visitUnknown = 608;
  where = 609;
  wireFormat = 610;
  with = 611;
  WrappedType = 612;
  wrapped_vsnprintf = 613;
  yday = 614;
  YY = 615;
}
