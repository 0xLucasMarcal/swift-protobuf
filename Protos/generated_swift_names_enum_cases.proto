syntax = "proto3";
package protobuf_unittest;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  a = 1;
  adjusted = 2;
  any = 3;
  AnyExtensionField = 4;
  AnyMessageStorage = 5;
  Api = 6;
  appended = 7;
  appendUIntHex = 8;
  appendUnknown = 9;
  apple = 10;
  are = 11;
  areAllInitialized = 12;
  arrayLiteral = 13;
  arraySeparator = 14;
  as = 15;
  asciiOpenCurlyBracket = 16;
  asciiZero = 17;
  asJSONObject = 18;
  available = 19;
  b = 20;
  base64String = 21;
  BaseType = 22;
  because = 23;
  binary = 24;
  BinaryDecoder = 25;
  BinaryEncoder = 26;
  BinaryEncodingSizeVisitor = 27;
  BinaryEncodingVisitor = 28;
  bits = 29;
  body = 30;
  bodySize = 31;
  Bool = 32;
  booleanLiteral = 33;
  BooleanLiteralType = 34;
  boolValue = 35;
  buffer = 36;
  buildTypeURL = 37;
  by = 38;
  bytes = 39;
  BytesValue = 40;
  c = 41;
  capitalizeNext = 42;
  cardinality = 43;
  Character = 44;
  characters = 45;
  chars = 46;
  clearExtensionValue = 47;
  clearSourceContext = 48;
  clearValue = 49;
  com = 50;
  consume = 51;
  contentJSON = 52;
  contentsOf = 53;
  count = 54;
  customCodable = 55;
  d = 56;
  Data = 57;
  dataResult = 58;
  dataSize = 59;
  date = 60;
  daySec = 61;
  daysSinceEpoch = 62;
  DD = 63;
  debugDescription = 64;
  decodeBytes = 65;
  decoded = 66;
  decodedFromJSONNull = 67;
  decodeExtensionField = 68;
  decodeJSON = 69;
  decodeMapField = 70;
  decodeMessage = 71;
  decoder = 72;
  decodeRepeated = 73;
  decodeRepeatedBoolField = 74;
  decodeRepeatedBytesField = 75;
  decodeRepeatedDoubleField = 76;
  decodeRepeatedEnumField = 77;
  decodeRepeatedFixed32Field = 78;
  decodeRepeatedFixed64Field = 79;
  decodeRepeatedFloatField = 80;
  decodeRepeatedGroupField = 81;
  decodeRepeatedInt32Field = 82;
  decodeRepeatedInt64Field = 83;
  decodeRepeatedMessageField = 84;
  decodeRepeatedSFixed32Field = 85;
  decodeRepeatedSFixed64Field = 86;
  decodeRepeatedSInt32Field = 87;
  decodeRepeatedSInt64Field = 88;
  decodeRepeatedStringField = 89;
  decodeRepeatedUInt32Field = 90;
  decodeRepeatedUInt64Field = 91;
  decodeSingular = 92;
  decodeSingularBoolField = 93;
  decodeSingularBytesField = 94;
  decodeSingularDoubleField = 95;
  decodeSingularEnumField = 96;
  decodeSingularFixed32Field = 97;
  decodeSingularFixed64Field = 98;
  decodeSingularFloatField = 99;
  decodeSingularGroupField = 100;
  decodeSingularInt32Field = 101;
  decodeSingularInt64Field = 102;
  decodeSingularMessageField = 103;
  decodeSingularSFixed32Field = 104;
  decodeSingularSFixed64Field = 105;
  decodeSingularSInt32Field = 106;
  decodeSingularSInt64Field = 107;
  decodeSingularStringField = 108;
  decodeSingularUInt32Field = 109;
  decodeSingularUInt64Field = 110;
  decodeString = 111;
  decodeTextFormat = 112;
  defaultValue = 113;
  description = 114;
  destination = 115;
  Dictionary = 116;
  dictionaryLiteral = 117;
  digit0 = 118;
  digit1 = 119;
  digitCount = 120;
  digits = 121;
  digitValue = 122;
  discardableResult = 123;
  DispatchQueue = 124;
  div = 125;
  double = 126;
  doubleToUtf8 = 127;
  DoubleValue = 128;
  Duration = 129;
  E = 130;
  Element = 131;
  elements = 132;
  emitExtensionFieldName = 133;
  emitFieldName = 134;
  emitFieldNumber = 135;
  emitVerboseTextForm = 136;
  Empty = 137;
  encoded = 138;
  encodedJSONString = 139;
  encodedSize = 140;
  encodeField = 141;
  encoder = 142;
  end = 143;
  endArray = 144;
  endMessageField = 145;
  endObject = 146;
  endRegularField = 147;
  Enum = 148;
  enumvalue = 149;
  Equatable = 150;
  ext = 151;
  extendedGraphemeClusterLiteral = 152;
  ExtendedGraphemeClusterLiteralType = 153;
  ExtensionFieldValueSet = 154;
  ExtensionMap = 155;
  extensions = 156;
  extras = 157;
  f = 158;
  false = 159;
  field = 160;
  FieldMask = 161;
  fieldName = 162;
  fieldNameCount = 163;
  fieldNumber = 164;
  fieldNumberForProto = 165;
  fields = 166;
  fieldSize = 167;
  FieldTag = 168;
  fieldType = 169;
  fieldValue = 170;
  fileName = 171;
  fileprivate = 172;
  firstItem = 173;
  flatMap = 174;
  float = 175;
  floatLiteral = 176;
  FloatLiteralType = 177;
  floatToUtf8 = 178;
  FloatValue = 179;
  for = 180;
  formatDuration = 181;
  formatTimestamp = 182;
  forMessage = 183;
  forMessageName = 184;
  forReadingFrom = 185;
  forTypeURL = 186;
  forWritingInto = 187;
  from = 188;
  fromAscii2 = 189;
  fromAscii4 = 190;
  fromHexDigit = 191;
  fromMessage = 192;
  fromURL = 193;
  func = 194;
  Functions = 195;
  G = 196;
  generated = 197;
  get = 198;
  getExtensionValue = 199;
  Google_Protobuf_Any = 200;
  Google_Protobuf_Api = 201;
  Google_Protobuf_BoolValue = 202;
  Google_Protobuf_BytesValue = 203;
  Google_Protobuf_DoubleValue = 204;
  Google_Protobuf_Duration = 205;
  Google_Protobuf_Empty = 206;
  Google_Protobuf_Enum = 207;
  Google_Protobuf_EnumValue = 208;
  Google_Protobuf_Field = 209;
  Google_Protobuf_FieldMask = 210;
  Google_Protobuf_FloatValue = 211;
  Google_Protobuf_Int32Value = 212;
  Google_Protobuf_Int64Value = 213;
  Google_Protobuf_ListValue = 214;
  Google_Protobuf_Method = 215;
  Google_Protobuf_Mixin = 216;
  Google_Protobuf_NullValue = 217;
  Google_Protobuf_Option = 218;
  Google_Protobuf_SourceContext = 219;
  Google_Protobuf_StringValue = 220;
  Google_Protobuf_Struct = 221;
  Google_Protobuf_Syntax = 222;
  Google_Protobuf_Timestamp = 223;
  Google_Protobuf_Type = 224;
  Google_Protobuf_UInt32Value = 225;
  Google_Protobuf_UInt64Value = 226;
  Google_Protobuf_Value = 227;
  gregorianDateFromSecondsSince1970 = 228;
  group = 229;
  h = 230;
  handleConflictingOneOf = 231;
  has = 232;
  hasExtensionValue = 233;
  hash = 234;
  Hashable = 235;
  hashValue = 236;
  HashVisitor = 237;
  hasSourceContext = 238;
  hasValue = 239;
  hh = 240;
  hour = 241;
  i = 242;
  index = 243;
  init = 244;
  inout = 245;
  insert = 246;
  insertIntoSet = 247;
  Int = 248;
  Int32 = 249;
  Int32Value = 250;
  Int64 = 251;
  Int64Value = 252;
  Int8 = 253;
  integerLiteral = 254;
  IntegerLiteralType = 255;
  intern = 256;
  internal = 257;
  InternalState = 258;
  isA = 259;
  isEqual = 260;
  isEqualTo = 261;
  isInitialized = 262;
  it = 263;
  i_2166136261 = 264;
  json = 265;
  JSONDecoder = 266;
  jsonEncoder = 267;
  JSONEncodingVisitor = 268;
  JSONMapEncodingVisitor = 269;
  jsonName = 270;
  jsonPath = 271;
  jsonPaths = 272;
  JSONScanner = 273;
  jsonString = 274;
  jsonText = 275;
  JSONToProto = 276;
  jsonUTF8Data = 277;
  julianDayNumberFromSecondsSince1970 = 278;
  k = 279;
  Key = 280;
  keyField = 281;
  KeyType = 282;
  kind = 283;
  knownTypes = 284;
  l = 285;
  label = 286;
  length = 287;
  let = 288;
  lhs = 289;
  listOfMessages = 290;
  listValue = 291;
  littleEndian = 292;
  littleEndianBytes = 293;
  M = 294;
  major = 295;
  makeIterator = 296;
  mapHash = 297;
  MapKeyType = 298;
  mapNameResolver = 299;
  mapToMessages = 300;
  MapValueType = 301;
  mapVisitor = 302;
  mdayStart = 303;
  members = 304;
  merge = 305;
  message = 306;
  MessageExtension = 307;
  MessageExtensionBase = 308;
  messageType = 309;
  Method = 310;
  methods = 311;
  minor = 312;
  Mixin = 313;
  mixins = 314;
  mm = 315;
  mod = 316;
  month = 317;
  mutating = 318;
  n = 319;
  name = 320;
  NameDescription = 321;
  NameMap = 322;
  nameResolver = 323;
  names = 324;
  nanos = 325;
  nativeBytes = 326;
  nativeEndianBytes = 327;
  newL = 328;
  newValue = 329;
  nextFieldNumber = 330;
  nil = 331;
  nilLiteral = 332;
  no = 333;
  normalizeForDuration = 334;
  normalizeForTimestamp = 335;
  nullValue = 336;
  number = 337;
  numberValue = 338;
  of = 339;
  oneofIndex = 340;
  oneofs = 341;
  OneOf_Kind = 342;
  only = 343;
  Option = 344;
  OptionalEnumExtensionField = 345;
  OptionalExtensionField = 346;
  OptionalGroupExtensionField = 347;
  OptionalMessageExtensionField = 348;
  options = 349;
  other = 350;
  out = 351;
  output = 352;
  p = 353;
  packed = 354;
  PackedEnumExtensionField = 355;
  PackedExtensionField = 356;
  packedSize = 357;
  parseDuration = 358;
  parseJSONFieldNames = 359;
  parseTimestamp = 360;
  partial = 361;
  path = 362;
  paths = 363;
  pointer = 364;
  pos = 365;
  prefix = 366;
  preTraverse = 367;
  private = 368;
  proto = 369;
  proto2 = 370;
  proto3DefaultValue = 371;
  ProtobufBool = 372;
  ProtobufBytes = 373;
  ProtobufDouble = 374;
  ProtobufEnumMap = 375;
  protobufExtension = 376;
  ProtobufFloat = 377;
  ProtobufInt32 = 378;
  ProtobufInt64 = 379;
  ProtobufMap = 380;
  ProtobufMessageMap = 381;
  ProtobufString = 382;
  ProtobufUInt32 = 383;
  ProtobufUInt64 = 384;
  protobuf_extensionFieldValues = 385;
  protobuf_fieldNumber = 386;
  protobuf_generated_isEqualTo = 387;
  protobuf_nameMap = 388;
  protobuf_newField = 389;
  protobuf_package = 390;
  protobuf_set = 391;
  protoFieldName = 392;
  protoMessageName = 393;
  protoPaths = 394;
  ProtoToJSON = 395;
  public = 396;
  putBoolValue = 397;
  putBytesValue = 398;
  putDoubleValue = 399;
  putEnumValue = 400;
  putFixedUInt32 = 401;
  putFixedUInt64 = 402;
  putFloatValue = 403;
  putInt64 = 404;
  putStringValue = 405;
  putUInt64 = 406;
  putUInt64Hex = 407;
  putVarInt = 408;
  putZigZagVarInt = 409;
  RawValue = 410;
  register = 411;
  RepeatedEnumExtensionField = 412;
  RepeatedExtensionField = 413;
  RepeatedGroupExtensionField = 414;
  RepeatedMessageExtensionField = 415;
  requestStreaming = 416;
  requestTypeURL = 417;
  requiredSize = 418;
  responseStreaming = 419;
  responseTypeURL = 420;
  result = 421;
  return = 422;
  revision = 423;
  rhs = 424;
  root = 425;
  s = 426;
  savedPosition = 427;
  sawBackslash = 428;
  scanner = 429;
  seconds = 430;
  self = 431;
  separator = 432;
  serializeAnyJSON = 433;
  serializedData = 434;
  serializedSize = 435;
  serialQueue = 436;
  set = 437;
  setExtensionValue = 438;
  shift = 439;
  SignedInteger = 440;
  SimpleExtensionMap = 441;
  sizer = 442;
  slowUtf8ToString = 443;
  sourceContext = 444;
  split = 445;
  ss = 446;
  start = 447;
  startArray = 448;
  startField = 449;
  startIndex = 450;
  startMessageField = 451;
  startObject = 452;
  startRegularField = 453;
  state = 454;
  static = 455;
  StaticString = 456;
  storage = 457;
  StorageClass = 458;
  String = 459;
  stringLiteral = 460;
  StringLiteralType = 461;
  stringResult = 462;
  stringValue = 463;
  Struct = 464;
  structValue = 465;
  subDecoder = 466;
  subscript = 467;
  swift = 468;
  SwiftProtobuf = 469;
  syntax = 470;
  T = 471;
  tag = 472;
  target = 473;
  terminator = 474;
  testDecoder = 475;
  text = 476;
  textDecoder = 477;
  TextFormatDecoder = 478;
  TextFormatEncoder = 479;
  TextFormatEncodingVisitor = 480;
  TextFormatScanner = 481;
  textFormatString = 482;
  that = 483;
  they = 484;
  throws = 485;
  timeInterval = 486;
  timeIntervalSince1970 = 487;
  timeIntervalSinceReferenceDate = 488;
  timeOfDayFromSecondsSince1970 = 489;
  Timestamp = 490;
  toJsonFieldName = 491;
  total = 492;
  traverse = 493;
  true = 494;
  try = 495;
  Type = 496;
  typealias = 497;
  typeName = 498;
  typePrefix = 499;
  typeRegistry = 500;
  typeStart = 501;
  typeUnknown = 502;
  typeURL = 503;
  UInt32 = 504;
  UInt32Value = 505;
  UInt64 = 506;
  UInt64Value = 507;
  UInt8 = 508;
  UnicodeScalar = 509;
  unicodeScalarLiteral = 510;
  UnicodeScalarLiteralType = 511;
  unicodeScalars = 512;
  UnicodeScalarView = 513;
  union = 514;
  uniqueStorage = 515;
  unknown = 516;
  unknownData = 517;
  unknownFields = 518;
  UnknownStorage = 519;
  unpack = 520;
  unpackTo = 521;
  UnsafeBufferPointer = 522;
  UnsafeMutablePointer = 523;
  UnsafeMutableRawBufferPointer = 524;
  UnsafePointer = 525;
  url = 526;
  used = 527;
  utf8 = 528;
  utf8Buffer = 529;
  utf8Codec = 530;
  utf8Pointer = 531;
  utf8ToDouble = 532;
  utf8ToString = 533;
  UTF8View = 534;
  v = 535;
  value = 536;
  valueField = 537;
  values = 538;
  ValueType = 539;
  var = 540;
  version = 541;
  versionString = 542;
  visitExtensionFields = 543;
  visitMapField = 544;
  visitor = 545;
  visitPacked = 546;
  visitPackedBoolField = 547;
  visitPackedDoubleField = 548;
  visitPackedEnumField = 549;
  visitPackedFixed32Field = 550;
  visitPackedFixed64Field = 551;
  visitPackedFloatField = 552;
  visitPackedInt32Field = 553;
  visitPackedInt64Field = 554;
  visitPackedSFixed32Field = 555;
  visitPackedSFixed64Field = 556;
  visitPackedSInt32Field = 557;
  visitPackedSInt64Field = 558;
  visitPackedUInt32Field = 559;
  visitPackedUInt64Field = 560;
  visitRepeated = 561;
  visitRepeatedBoolField = 562;
  visitRepeatedBytesField = 563;
  visitRepeatedDoubleField = 564;
  visitRepeatedEnumField = 565;
  visitRepeatedFixed32Field = 566;
  visitRepeatedFixed64Field = 567;
  visitRepeatedFloatField = 568;
  visitRepeatedGroupField = 569;
  visitRepeatedInt32Field = 570;
  visitRepeatedInt64Field = 571;
  visitRepeatedMessageField = 572;
  visitRepeatedSFixed32Field = 573;
  visitRepeatedSFixed64Field = 574;
  visitRepeatedSInt32Field = 575;
  visitRepeatedSInt64Field = 576;
  visitRepeatedStringField = 577;
  visitRepeatedUInt32Field = 578;
  visitRepeatedUInt64Field = 579;
  visitSingular = 580;
  visitSingularBoolField = 581;
  visitSingularBytesField = 582;
  visitSingularDoubleField = 583;
  visitSingularEnumField = 584;
  visitSingularFixed32Field = 585;
  visitSingularFixed64Field = 586;
  visitSingularFloatField = 587;
  visitSingularGroupField = 588;
  visitSingularInt32Field = 589;
  visitSingularInt64Field = 590;
  visitSingularMessageField = 591;
  visitSingularSFixed32Field = 592;
  visitSingularSFixed64Field = 593;
  visitSingularSInt32Field = 594;
  visitSingularSInt64Field = 595;
  visitSingularStringField = 596;
  visitSingularUInt32Field = 597;
  visitSingularUInt64Field = 598;
  visitUnknown = 599;
  where = 600;
  wireFormat = 601;
  with = 602;
  WrappedType = 603;
  wrapped_vsnprintf = 604;
  yday = 605;
  YY = 606;
}
