// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package protobuf_unittest;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  a = 1;
  adjusted = 2;
  any = 3;
  AnyExtensionField = 4;
  AnyMessageExtension = 5;
  AnyMessageStorage = 6;
  api = 7;
  appended = 8;
  appendUIntHex = 9;
  appendUnknown = 10;
  are = 11;
  areAllInitialized = 12;
  array = 13;
  arrayLiteral = 14;
  arraySeparator = 15;
  as = 16;
  asciiOpenCurlyBracket = 17;
  asciiZero = 18;
  asJSONObject = 19;
  available = 20;
  b = 21;
  BaseType = 22;
  because = 23;
  binary = 24;
  BinaryDecoder = 25;
  BinaryEncoder = 26;
  BinaryEncodingSizeVisitor = 27;
  BinaryEncodingVisitor = 28;
  blob = 29;
  body = 30;
  bodySize = 31;
  Bool = 32;
  booleanLiteral = 33;
  BooleanLiteralType = 34;
  boolValue = 35;
  buffer = 36;
  buildTypeURL = 37;
  by = 38;
  bytes = 39;
  bytesInGroup = 40;
  BytesValue = 41;
  c = 42;
  capitalizeNext = 43;
  cardinality = 44;
  Character = 45;
  characters = 46;
  chars = 47;
  clearExtensionValue = 48;
  clearSourceContext = 49;
  clearValue = 50;
  Collection = 51;
  consume = 52;
  contentJSON = 53;
  contentsOf = 54;
  count = 55;
  current = 56;
  customCodable = 57;
  d = 58;
  Data = 59;
  dataPointer = 60;
  dataResult = 61;
  dataSize = 62;
  date = 63;
  daySec = 64;
  daysSinceEpoch = 65;
  DD = 66;
  debugDescription = 67;
  decoded = 68;
  decodedFromJSONNull = 69;
  decodeExtensionField = 70;
  decodeJSON = 71;
  decodeMapField = 72;
  decodeMessage = 73;
  decoder = 74;
  decodeRepeated = 75;
  decodeRepeatedBoolField = 76;
  decodeRepeatedBytesField = 77;
  decodeRepeatedDoubleField = 78;
  decodeRepeatedEnumField = 79;
  decodeRepeatedFixed32Field = 80;
  decodeRepeatedFixed64Field = 81;
  decodeRepeatedFloatField = 82;
  decodeRepeatedGroupField = 83;
  decodeRepeatedInt32Field = 84;
  decodeRepeatedInt64Field = 85;
  decodeRepeatedMessageField = 86;
  decodeRepeatedSFixed32Field = 87;
  decodeRepeatedSFixed64Field = 88;
  decodeRepeatedSInt32Field = 89;
  decodeRepeatedSInt64Field = 90;
  decodeRepeatedStringField = 91;
  decodeRepeatedUInt32Field = 92;
  decodeRepeatedUInt64Field = 93;
  decodeSingular = 94;
  decodeSingularBoolField = 95;
  decodeSingularBytesField = 96;
  decodeSingularDoubleField = 97;
  decodeSingularEnumField = 98;
  decodeSingularFixed32Field = 99;
  decodeSingularFixed64Field = 100;
  decodeSingularFloatField = 101;
  decodeSingularGroupField = 102;
  decodeSingularInt32Field = 103;
  decodeSingularInt64Field = 104;
  decodeSingularMessageField = 105;
  decodeSingularSFixed32Field = 106;
  decodeSingularSFixed64Field = 107;
  decodeSingularSInt32Field = 108;
  decodeSingularSInt64Field = 109;
  decodeSingularStringField = 110;
  decodeSingularUInt32Field = 111;
  decodeSingularUInt64Field = 112;
  decodeString = 113;
  decodeTextFormat = 114;
  defaultInstance = 115;
  defaultValue = 116;
  description = 117;
  destination = 118;
  Dictionary = 119;
  dictionaryLiteral = 120;
  digit = 121;
  digit0 = 122;
  digit1 = 123;
  digitCount = 124;
  digits = 125;
  digitValue = 126;
  discardableResult = 127;
  DispatchQueue = 128;
  div = 129;
  double = 130;
  doubleToUtf8 = 131;
  DoubleValue = 132;
  Duration = 133;
  E = 134;
  Element = 135;
  elements = 136;
  emitExtensionFieldName = 137;
  emitFieldName = 138;
  emitFieldNumber = 139;
  emitVerboseTextForm = 140;
  Empty = 141;
  emptyData = 142;
  encoded = 143;
  encodedJSONString = 144;
  encodedSize = 145;
  encodeField = 146;
  encoder = 147;
  end = 148;
  endArray = 149;
  endMessageField = 150;
  endObject = 151;
  endRegularField = 152;
  Enum = 153;
  enumvalue = 154;
  Equatable = 155;
  ext = 156;
  extendedGraphemeClusterLiteral = 157;
  ExtendedGraphemeClusterLiteralType = 158;
  ExtensionFieldValueSet = 159;
  extensions = 160;
  extras = 161;
  f = 162;
  false = 163;
  fastUtf8ToString = 164;
  field = 165;
  FieldMask = 166;
  fieldName = 167;
  fieldNameCount = 168;
  fieldNum = 169;
  fieldNumber = 170;
  fieldNumberForProto = 171;
  fields = 172;
  fieldSize = 173;
  FieldTag = 174;
  fieldType = 175;
  fieldValue = 176;
  fileName = 177;
  fileprivate = 178;
  firstItem = 179;
  flatMap = 180;
  float = 181;
  floatLiteral = 182;
  FloatLiteralType = 183;
  floatToUtf8 = 184;
  FloatValue = 185;
  for = 186;
  formatDuration = 187;
  formatTimestamp = 188;
  forMessage = 189;
  forMessageName = 190;
  forReadingFrom = 191;
  forTypeURL = 192;
  forWritingInto = 193;
  from = 194;
  fromAscii2 = 195;
  fromAscii4 = 196;
  fromHexDigit = 197;
  fromMessage = 198;
  fromURL = 199;
  func = 200;
  Functions = 201;
  G = 202;
  generated = 203;
  get = 204;
  getExtensionValue = 205;
  Google_Protobuf_Any = 206;
  Google_Protobuf_Api = 207;
  Google_Protobuf_BoolValue = 208;
  Google_Protobuf_BytesValue = 209;
  Google_Protobuf_DoubleValue = 210;
  Google_Protobuf_Duration = 211;
  Google_Protobuf_Empty = 212;
  Google_Protobuf_Enum = 213;
  Google_Protobuf_EnumValue = 214;
  Google_Protobuf_Field = 215;
  Google_Protobuf_FieldMask = 216;
  Google_Protobuf_FloatValue = 217;
  Google_Protobuf_Int32Value = 218;
  Google_Protobuf_Int64Value = 219;
  Google_Protobuf_ListValue = 220;
  Google_Protobuf_Method = 221;
  Google_Protobuf_Mixin = 222;
  Google_Protobuf_NullValue = 223;
  Google_Protobuf_Option = 224;
  Google_Protobuf_SourceContext = 225;
  Google_Protobuf_StringValue = 226;
  Google_Protobuf_Struct = 227;
  Google_Protobuf_Syntax = 228;
  Google_Protobuf_Timestamp = 229;
  Google_Protobuf_Type = 230;
  Google_Protobuf_UInt32Value = 231;
  Google_Protobuf_UInt64Value = 232;
  Google_Protobuf_Value = 233;
  gregorianDateFromSecondsSince1970 = 234;
  group = 235;
  h = 236;
  handleConflictingOneOf = 237;
  has = 238;
  hasExtensionValue = 239;
  hash = 240;
  Hashable = 241;
  hashValue = 242;
  HashVisitor = 243;
  hasSourceContext = 244;
  hasValue = 245;
  hh = 246;
  hour = 247;
  i = 248;
  in = 249;
  index = 250;
  init = 251;
  inout = 252;
  insert = 253;
  insertIntoSet = 254;
  Instead = 255;
  Int = 256;
  Int32 = 257;
  Int32Value = 258;
  Int64 = 259;
  Int64Value = 260;
  Int8 = 261;
  integerLiteral = 262;
  IntegerLiteralType = 263;
  intern = 264;
  Internal = 265;
  InternalState = 266;
  is = 267;
  isA = 268;
  isEqual = 269;
  isEqualTo = 270;
  isInitialized = 271;
  it = 272;
  Iterator = 273;
  i_2166136261 = 274;
  json = 275;
  JSONDecoder = 276;
  jsonEncoder = 277;
  JSONEncodingVisitor = 278;
  JSONMapEncodingVisitor = 279;
  jsonName = 280;
  jsonPath = 281;
  jsonPaths = 282;
  JSONScanner = 283;
  jsonString = 284;
  jsonText = 285;
  JSONToProto = 286;
  jsonUTF8Data = 287;
  julianDayNumberFromSecondsSince1970 = 288;
  k = 289;
  Key = 290;
  keyField = 291;
  KeyType = 292;
  kind = 293;
  knownTypes = 294;
  l = 295;
  label = 296;
  length = 297;
  let = 298;
  lhs = 299;
  listOfMessages = 300;
  listValue = 301;
  littleEndian = 302;
  littleEndianBytes = 303;
  M = 304;
  major = 305;
  makeIterator = 306;
  mapHash = 307;
  mapNameResolver = 308;
  mapToMessages = 309;
  MapValueType = 310;
  mapVisitor = 311;
  mdayStart = 312;
  members = 313;
  merge = 314;
  message = 315;
  messageDepthLimit = 316;
  MessageExtension = 317;
  messageType = 318;
  Method = 319;
  methods = 320;
  minor = 321;
  Mixin = 322;
  mixins = 323;
  mm = 324;
  mod = 325;
  month = 326;
  mutating = 327;
  n = 328;
  name = 329;
  NameDescription = 330;
  NameMap = 331;
  nameResolver = 332;
  names = 333;
  nanos = 334;
  nativeBytes = 335;
  nativeEndianBytes = 336;
  newL = 337;
  newValue = 338;
  nextFieldNumber = 339;
  nil = 340;
  nilLiteral = 341;
  no = 342;
  normalizeForDuration = 343;
  normalizeForTimestamp = 344;
  nullValue = 345;
  number = 346;
  numberValue = 347;
  of = 348;
  oneofIndex = 349;
  oneofs = 350;
  OneOf_Kind = 351;
  only = 352;
  Option = 353;
  OptionalEnumExtensionField = 354;
  OptionalExtensionField = 355;
  OptionalGroupExtensionField = 356;
  OptionalMessageExtensionField = 357;
  options = 358;
  org = 359;
  other = 360;
  out = 361;
  output = 362;
  p = 363;
  packed = 364;
  PackedEnumExtensionField = 365;
  PackedExtensionField = 366;
  packedSize = 367;
  padding = 368;
  parent = 369;
  parseBareFloatString = 370;
  parseBareSInt = 371;
  parseBareUInt = 372;
  parseBytes = 373;
  parseDuration = 374;
  parseJSONFieldNames = 375;
  parseTimestamp = 376;
  partial = 377;
  pass = 378;
  path = 379;
  paths = 380;
  pointer = 381;
  pos = 382;
  prefix = 383;
  preTraverse = 384;
  private = 385;
  proto = 386;
  proto2 = 387;
  proto3DefaultValue = 388;
  protobuf = 389;
  ProtobufBool = 390;
  ProtobufBytes = 391;
  ProtobufDouble = 392;
  ProtobufEnumMap = 393;
  protobufExtension = 394;
  ProtobufFloat = 395;
  ProtobufInt32 = 396;
  ProtobufInt64 = 397;
  ProtobufMap = 398;
  ProtobufMessageMap = 399;
  ProtobufString = 400;
  ProtobufUInt32 = 401;
  ProtobufUInt64 = 402;
  protobuf_extensionFieldValues = 403;
  protobuf_fieldNumber = 404;
  protobuf_generated_isEqualTo = 405;
  protobuf_nameMap = 406;
  protobuf_newField = 407;
  protobuf_package = 408;
  protoFieldName = 409;
  protoMessageName = 410;
  protoPaths = 411;
  ProtoToJSON = 412;
  public = 413;
  putBoolValue = 414;
  putBytesValue = 415;
  putDoubleValue = 416;
  putEnumValue = 417;
  putFixedUInt32 = 418;
  putFixedUInt64 = 419;
  putFloatValue = 420;
  putInt64 = 421;
  putStringValue = 422;
  putUInt64 = 423;
  putUInt64Hex = 424;
  putVarInt = 425;
  putZigZagVarInt = 426;
  rawChars = 427;
  RawValue = 428;
  register = 429;
  RepeatedEnumExtensionField = 430;
  RepeatedExtensionField = 431;
  RepeatedGroupExtensionField = 432;
  RepeatedMessageExtensionField = 433;
  requestStreaming = 434;
  requestTypeURL = 435;
  requiredSize = 436;
  responseStreaming = 437;
  responseTypeURL = 438;
  result = 439;
  return = 440;
  revision = 441;
  rhs = 442;
  root = 443;
  s = 444;
  sawBackslash = 445;
  scanner = 446;
  seconds = 447;
  self = 448;
  separator = 449;
  serializeAnyJSON = 450;
  serializedData = 451;
  serializedSize = 452;
  serialQueue = 453;
  set = 454;
  setExtensionValue = 455;
  shift = 456;
  SignedInteger = 457;
  SimpleExtensionMap = 458;
  sizer = 459;
  slowUtf8ToString = 460;
  source = 461;
  sourceContext = 462;
  split = 463;
  ss = 464;
  start = 465;
  startArray = 466;
  startField = 467;
  startIndex = 468;
  startMessageField = 469;
  startObject = 470;
  startRegularField = 471;
  state = 472;
  static = 473;
  StaticString = 474;
  storage = 475;
  StorageClass = 476;
  String = 477;
  stringLiteral = 478;
  StringLiteralType = 479;
  stringResult = 480;
  stringValue = 481;
  Struct = 482;
  structValue = 483;
  subDecoder = 484;
  subscript = 485;
  swift = 486;
  SwiftProtobuf = 487;
  syntax = 488;
  T = 489;
  tag = 490;
  terminator = 491;
  testDecoder = 492;
  text = 493;
  textDecoder = 494;
  TextFormatDecoder = 495;
  TextFormatEncoder = 496;
  TextFormatEncodingVisitor = 497;
  TextFormatScanner = 498;
  textFormatString = 499;
  that = 500;
  the = 501;
  there = 502;
  they = 503;
  through = 504;
  throws = 505;
  timeInterval = 506;
  timeIntervalSince1970 = 507;
  timeIntervalSinceReferenceDate = 508;
  timeOfDayFromSecondsSince1970 = 509;
  Timestamp = 510;
  toJsonFieldName = 511;
  total = 512;
  traverse = 513;
  true = 514;
  try = 515;
  type = 516;
  typealias = 517;
  typeName = 518;
  typePrefix = 519;
  typeRegistry = 520;
  typeStart = 521;
  typeUnknown = 522;
  typeURL = 523;
  UInt32 = 524;
  UInt32Value = 525;
  UInt64 = 526;
  UInt64Value = 527;
  UInt8 = 528;
  UnicodeScalar = 529;
  unicodeScalarLiteral = 530;
  UnicodeScalarLiteralType = 531;
  unicodeScalars = 532;
  UnicodeScalarView = 533;
  union = 534;
  uniqueStorage = 535;
  unknown = 536;
  unknownFields = 537;
  UnknownStorage = 538;
  unpack = 539;
  unpackTo = 540;
  UnsafeBufferPointer = 541;
  UnsafeMutablePointer = 542;
  UnsafeMutableRawBufferPointer = 543;
  UnsafePointer = 544;
  updatedOptions = 545;
  url = 546;
  used = 547;
  utf8 = 548;
  utf8Buffer = 549;
  utf8Codec = 550;
  utf8ToDouble = 551;
  utf8ToString = 552;
  UTF8View = 553;
  v = 554;
  value = 555;
  valueField = 556;
  values = 557;
  ValueType = 558;
  var = 559;
  version = 560;
  versionString = 561;
  visitExtensionFields = 562;
  visitMapField = 563;
  visitor = 564;
  visitPacked = 565;
  visitPackedBoolField = 566;
  visitPackedDoubleField = 567;
  visitPackedEnumField = 568;
  visitPackedFixed32Field = 569;
  visitPackedFixed64Field = 570;
  visitPackedFloatField = 571;
  visitPackedInt32Field = 572;
  visitPackedInt64Field = 573;
  visitPackedSFixed32Field = 574;
  visitPackedSFixed64Field = 575;
  visitPackedSInt32Field = 576;
  visitPackedSInt64Field = 577;
  visitPackedUInt32Field = 578;
  visitPackedUInt64Field = 579;
  visitRepeated = 580;
  visitRepeatedBoolField = 581;
  visitRepeatedBytesField = 582;
  visitRepeatedDoubleField = 583;
  visitRepeatedEnumField = 584;
  visitRepeatedFixed32Field = 585;
  visitRepeatedFixed64Field = 586;
  visitRepeatedFloatField = 587;
  visitRepeatedGroupField = 588;
  visitRepeatedInt32Field = 589;
  visitRepeatedInt64Field = 590;
  visitRepeatedMessageField = 591;
  visitRepeatedSFixed32Field = 592;
  visitRepeatedSFixed64Field = 593;
  visitRepeatedSInt32Field = 594;
  visitRepeatedSInt64Field = 595;
  visitRepeatedStringField = 596;
  visitRepeatedUInt32Field = 597;
  visitRepeatedUInt64Field = 598;
  visitSingular = 599;
  visitSingularBoolField = 600;
  visitSingularBytesField = 601;
  visitSingularDoubleField = 602;
  visitSingularEnumField = 603;
  visitSingularFixed32Field = 604;
  visitSingularFixed64Field = 605;
  visitSingularFloatField = 606;
  visitSingularGroupField = 607;
  visitSingularInt32Field = 608;
  visitSingularInt64Field = 609;
  visitSingularMessageField = 610;
  visitSingularSFixed32Field = 611;
  visitSingularSFixed64Field = 612;
  visitSingularSInt32Field = 613;
  visitSingularSInt64Field = 614;
  visitSingularStringField = 615;
  visitSingularUInt32Field = 616;
  visitSingularUInt64Field = 617;
  visitUnknown = 618;
  where = 619;
  wireFormat = 620;
  with = 621;
  WrappedType = 622;
  wrapped_vsnprintf = 623;
  yday = 624;
  YY = 625;
}
